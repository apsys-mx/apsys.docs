{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenid@ a los recursos para documentaci\u00f3n y consulta de Apsys \ud83d\udc4b Hola, aqui encontraras los recursos de documentaci\u00f3n para procesos internos de Apsys!","title":"Inicio"},{"location":"#bienvenid-a-los-recursos-para-documentacion-y-consulta-de-apsys","text":"\ud83d\udc4b Hola, aqui encontraras los recursos de documentaci\u00f3n para procesos internos de Apsys!","title":"Bienvenid@ a los recursos para documentaci\u00f3n y consulta de Apsys"},{"location":"InductionTools/","text":"Hola, bienvenido a tu 1er d\u00eda. \ud83d\udc4b Bienvenid@ a tu nuevo trabajo en la familia Apsys! \u00bfQue necesitas para empezar? Para este punto ya se te ha proporcionado una computadora, la cual es personal y que sera tu principal herramienta, a continuaci\u00f3n encontraras una lista de acciones que revisaremos para tener tu pc a punto: \ud83d\udca1 Es importante seguir en orden los pasos de la lista, ya que de lo contrario se puede afectar la instalaci\u00f3n o acceso a los recursos necesarios para completar este proceso. La computadora se encuentra formateada y con configuraci\u00f3n de fabrica ( \u00bfComo formateo mi pc? ). Ya instale el navegador de mi preferencia ( Chrome , Firefox , Opera , etc). Ya dispongo de mi nuevo correo empresarial ( \u00bfComo lo obtengo? ). Descargue e instale Slack , (es importante hacer registro). Descargue e instale LightShot . Descargue e instale Postman , (es importante hacer registro). Descargue e instale Cisco AnyConnect. Descargue e instale GIT . Descargue e instale TortoiseGit . Descargue e instale el Microsoft SQL Server Management Studio (developer). Descargue e instale Visual Studio Community. Descargue e instale Visual Studio Code. Instale node.js desde una interfaz de linea de comandos. Instalar Microsoft SQL Server Management Studio. Para instalar esta aplicaci\u00f3n deberemos haber descargado el SSMS-Setup-ENU.exe, sino aqu\u00ed tambi\u00e9n puedes realizar la descarga. Abrimos el ejecutable y podremos observar la siguiente ventana. Podremos ver la ubicaci\u00f3n (ruta), donde se instalara el software, esta puede ser cambiada pero se recomienda dejar la que nos da por defecto. Procedemos a dar click en Install, y se comenzaran a cargar los paquetes como muestra la siguiente pantalla . Se comenzaran a instalar los diferentes paquetes, en ocasiones por cuestiones de configuraci\u00f3n nos aparecer\u00e1 el error siguiente: Para solucionarlo, bastara con reiniciar tu computadora y volver a realizar los pasos anteriores. Si ya no aparece este problema veremos como se lleva a cabo la instalaci\u00f3n de los paquetes y la barra Overall Progress se completara. Al terminar nos mostrara una pantalla que confirma la correcta instalaci\u00f3n y con el bot\u00f3n Close podremos cerrar el instalador. Si quieres aprender un poco mas de esta herramienta y realizar un par de acciones que te ser\u00e1n de ayuda para los proyectos que te esperan da click AQUI . Instalar Visual Studio Community. Para comenzar con la instalaci\u00f3n del Visual Studio sera necesario haber descargado el VisualStudioSetup.exe, en caso de aun no tenerlo puedes descargarlo aqu\u00ed . Ya teniendo nuestro programa instalador el siguiente paso entonces sera da doble click a dicho programa. Se desplegara la ventana de confirmaci\u00f3n para ejecutar el archivo, as\u00ed como se muestra en la siguiente imagen. Al hacer click en Ejecutar pasaremos a una ventana informativa donde Visual Studio nos dice que llevara a cabo algunas configuraciones previas a la instalaci\u00f3n . Deberemos dar click al bot\u00f3n de continuar y posteriormente se descargaran algunos archivos que iniciaran ahora si el instalador de Visual Studio. La ventana del instalador se vera de la siguiente manera: Y aqu\u00ed lo importante sera configurar la instalaci\u00f3n de nuestro Visual Studio para tener todos los complementos necesarios y as\u00ed aprovechar al m\u00e1ximo este software. Tenemos 4 pesta\u00f1as de opciones de configuraci\u00f3n: Cargas de trabajo, Componentes individuales, Paquetes de idioma y Ubicaciones de instalaci\u00f3n. A continuaci\u00f3n encontraras las opciones que deber\u00e1s marcar en cada pesta\u00f1a de configuraci\u00f3n. Cargas de trabajo. Desarrollo de ASP.NET y web. Desarrollo de Python. Desarrollo de Node.js. Desarrollo de la interfaz de usuario de aplicaciones multiplataforma de .NET. Desarrollo de la plataforma universal de Windows. Almacenamiento y procesamiento de datos. Componentes individuales. .NET 6.0 Runtime (Long Term Support). .NET 7.0 Runtime. .NET Core 3.1 Runtime (Long Term Support). .NET MAUI SDK for Android. .NET MAUI SDK for iOS. .NET MAUI SDK For Mac Catalyst. .NET MAUI SDK For Windows. .NET Native. .NET SDK for Android. .NET SDK for iOS. .NET WebAssembly for Mac Catalyst. Paquete de compatibilidad de .NET Framework 4.7.2. Paquete de compatibilidad de .NET Framework 4.8. Plantillas de proyecto y de elemento de .NET Framework. SDK de .NET. SDK de .NET Framework 4.8. \u261d Las opciones de los dem\u00e1s apartados de los Componentes individuales se deber\u00e1n mantener con la configuraci\u00f3n por defecto. Paquetes de idiomas. English. Espa\u00f1ol. \u261d Si bien estos idiomas son lo que se sugieren, es posible agregar cualquier otro de la lista bajo la premisa de que se domine bien el idioma seleccionado. Ubicaci\u00f3n de instalaci\u00f3n. La configuraci\u00f3n de este apartado puede ser la que esta por defecto, pero en caso de tener mas de un HDD o SSD, se puede seleccionar una ruta personalizada, todo esto con el fin de optimizar la memoria de almacenamiento disponible. Ya que hemos conlcuido con las opciones de configuraci\u00f3n podemos proceder a dar click en el boton de Instalar, dejando la opci\u00f3n de Instalar durante la descarga que esta por defecto. Aparecer\u00e1 una pantalla que nos muestra el porcentaje de descarga y el estatus de los paquetes instalados. \u26a0\ufe0f Lo mejor sera esperar a que se termine esta instalaci\u00f3n, conecta tu computadora con su cable de alimentaci\u00f3n y te recomendamos no instalar otro software mientras este proceso se lleva a cabo. Terminada la instalaci\u00f3n tendremos acceso a tres nuevos botones, Modificar , Iniciar y M\u00e1s. El primero nos servir\u00e1 para cambiar las configuraciones de instalaci\u00f3n que ya revisamos durante la instalaci\u00f3n, el segundo lanzara el programa de Visual Studio y el \u00faltimo nos permitir\u00e1 tener acceso a algunas herramientas relacionadas con la instalaci\u00f3n. Ahora que cuentas con esta gran herramienta \u00bfNo te gustar\u00eda dar tus primeros pasos us\u00e1ndola?, atr\u00e9vete a explorarla y conocer algunas funciones b\u00e1sicas que tiene para ti dando click AQUI . Instalar Visual Studio Code. Si ya has descargado el archivo VSCodeUserSetup-x64-1.74.1 pasaremos a la etapa de instalaci\u00f3n, de lo contrario descarga aqu\u00ed . Daremos doble click al programa de instalaci\u00f3n ya mencionado y nos aparecer\u00e1 la ventana de confirmaci\u00f3n para ejecutar a instalaci\u00f3n, damos click en Ejecutar. Ahora veremos el Acuerdo de Licencia, se sugiere leerlo y posteriormente cambiar a la opci\u00f3n Acepto el acuerdo situada en la parte inferior de la ventana . Y damos siguiente . En la siguiente ventana debemos seleccionar la carpeta de destino, se puede dejar la que se muestra por defecto, pero esto depender\u00e1 si es que tenemos mas de un medio de almacenamiento (HDD o SDD), ya que esto sera de importancia para optimizar la memoria. Despu\u00e9s de realizar la selecci\u00f3n volvemos a dar click en siguiente. Nuevamente nos aparece una selecci\u00f3n, en este caso la de la carpeta del men\u00fa de inicio. Se recomienda dejar la que esta por defecto. Y se da click en siguiente. Se muestran opciones de para la selecci\u00f3n de las tareas adicionales. Se deben marcar las que se muestran en la imagen. Y como en los pasos anteriores damos nuevamente a siguiente. Y ahora estamos listos para instalar, solo queda ir al bot\u00f3n de Instalar y permitimos que se realice esta acci\u00f3n. \u26a0\ufe0f Lo mejor sera esperar a que se termine esta instalaci\u00f3n, conecta tu computadora con su cable de alimentaci\u00f3n y te recomendamos no instalar otro software mientras este proceso se lleva a cabo. Y listo tu software esta instalado, puedes lanzarlo dejando la opci\u00f3n de Ejecutar Visual Studio Code y haciendo click en Finalizar , o a trav\u00e9s de los accesos directos que se mencionan en el apartado Usemos Visual Studio Code . Es hora de que conozcas mas a fondo esta incre\u00edble aplicaci\u00f3n, da click AQUI para mas informaci\u00f3n. Obtener correo personal Apsys. Para poder tener tu correo personal e \u00fanico que te identificara dentro de Apsys, deber\u00e1s ponerte en contacto con @oscar_sanchez, a trav\u00e9s de correo electr\u00f3nico. Como instalamos node.js Es esencial el uso de herramientas como las interfaces de linea de comandos o consolas como se conocen com\u00fanmente. Y para el caso de la instalaci\u00f3n del complemento node.js tendremos que recurrir al uso de alguna de las herramientas ya mencionadas. Se sugiere utilizar la herramienta s\u00edmbolo del sistema, la cual ya esta integrada en el sistema operativo windows, por lo que no deber\u00eda haber mayor problema para poder ejecutarlo. Antes de todo instalaremos en Node Version Manager(nvm), siguiendo los pasos descritos aqui . Presionamos al mismo tiempo en nuestro teclado la tecla windows y r , se desplegara la aplicaci\u00f3n Ejecutar. Escribimos cmd en la aplicaci\u00f3n Ejecutar y damos enter. Aparecer\u00e1 la ventana de la interfaz de linea de comando (\u201ds\u00edmbolo del sistema\u201d). \ud83d\udca1 Es importante verificar que el s\u00edmbolo del sistema se este ejecutando como Administrador. Verificamos la disponibilidad de versiones en la documentaci\u00f3n de node.js y escribimos en la consola. [server] $ nvm install v 'aqui va la version' Posterior a la instalaci\u00f3n establecemos la versi\u00f3n de node.js que se utilizara. [server] $ nvm use v 'versi\u00f3n del node.js' Now using node v 'versi\u00f3n del node.js' ( npm v ) Comprobamos la versi\u00f3n de node.js que se esta ejecutando ingresando la siguiente linea: [server] $ node -v v 'versi\u00f3n del node.js' Por \u00faltimo deberemos verificar y/o instalar el Node Package Manager(npm), para esto escribiremos en la consola lo siguiente: [server] $ npm install -g npm Y de manera similar como con el node.js, revisamos la versi\u00f3n del npm con el siguiente comando: [server] $ npm -v \u261d Es muy recomendable que cada que te integres o inicies alg\u00fan proyecto verifiques que versi\u00f3n de node y npm se requiere, preg\u00fantale a tu coach o compa\u00f1eros de proyecto si tienes dudas. Si te gustar\u00eda saber mas de la herramienta node.js y sus complementos visita su sitio nodejs.org . Usemos Visual Studio Code Usemos Visual Studio Usemos el gestionador de bases de datos. \ud83d\udc49 Tienes preguntas? Ponte en contacto con alguno de tus compa\u00f1eros a trav\u00e9s de los medios que se te han proporcionado.","title":"Primeros Pasos"},{"location":"InductionTools/#hola-bienvenido-a-tu-1er-dia","text":"\ud83d\udc4b Bienvenid@ a tu nuevo trabajo en la familia Apsys!","title":"Hola, bienvenido a tu 1er d\u00eda."},{"location":"InductionTools/#que-necesitas-para-empezar","text":"Para este punto ya se te ha proporcionado una computadora, la cual es personal y que sera tu principal herramienta, a continuaci\u00f3n encontraras una lista de acciones que revisaremos para tener tu pc a punto: \ud83d\udca1 Es importante seguir en orden los pasos de la lista, ya que de lo contrario se puede afectar la instalaci\u00f3n o acceso a los recursos necesarios para completar este proceso. La computadora se encuentra formateada y con configuraci\u00f3n de fabrica ( \u00bfComo formateo mi pc? ). Ya instale el navegador de mi preferencia ( Chrome , Firefox , Opera , etc). Ya dispongo de mi nuevo correo empresarial ( \u00bfComo lo obtengo? ). Descargue e instale Slack , (es importante hacer registro). Descargue e instale LightShot . Descargue e instale Postman , (es importante hacer registro). Descargue e instale Cisco AnyConnect. Descargue e instale GIT . Descargue e instale TortoiseGit . Descargue e instale el Microsoft SQL Server Management Studio (developer). Descargue e instale Visual Studio Community. Descargue e instale Visual Studio Code. Instale node.js desde una interfaz de linea de comandos.","title":"\u00bfQue necesitas para empezar?"},{"location":"InductionTools/#instalar-microsoft-sql-server-management-studio","text":"Para instalar esta aplicaci\u00f3n deberemos haber descargado el SSMS-Setup-ENU.exe, sino aqu\u00ed tambi\u00e9n puedes realizar la descarga. Abrimos el ejecutable y podremos observar la siguiente ventana. Podremos ver la ubicaci\u00f3n (ruta), donde se instalara el software, esta puede ser cambiada pero se recomienda dejar la que nos da por defecto. Procedemos a dar click en Install, y se comenzaran a cargar los paquetes como muestra la siguiente pantalla . Se comenzaran a instalar los diferentes paquetes, en ocasiones por cuestiones de configuraci\u00f3n nos aparecer\u00e1 el error siguiente: Para solucionarlo, bastara con reiniciar tu computadora y volver a realizar los pasos anteriores. Si ya no aparece este problema veremos como se lleva a cabo la instalaci\u00f3n de los paquetes y la barra Overall Progress se completara. Al terminar nos mostrara una pantalla que confirma la correcta instalaci\u00f3n y con el bot\u00f3n Close podremos cerrar el instalador. Si quieres aprender un poco mas de esta herramienta y realizar un par de acciones que te ser\u00e1n de ayuda para los proyectos que te esperan da click AQUI .","title":"Instalar Microsoft SQL Server Management Studio."},{"location":"InductionTools/#instalar-visual-studio-community","text":"Para comenzar con la instalaci\u00f3n del Visual Studio sera necesario haber descargado el VisualStudioSetup.exe, en caso de aun no tenerlo puedes descargarlo aqu\u00ed . Ya teniendo nuestro programa instalador el siguiente paso entonces sera da doble click a dicho programa. Se desplegara la ventana de confirmaci\u00f3n para ejecutar el archivo, as\u00ed como se muestra en la siguiente imagen. Al hacer click en Ejecutar pasaremos a una ventana informativa donde Visual Studio nos dice que llevara a cabo algunas configuraciones previas a la instalaci\u00f3n . Deberemos dar click al bot\u00f3n de continuar y posteriormente se descargaran algunos archivos que iniciaran ahora si el instalador de Visual Studio. La ventana del instalador se vera de la siguiente manera: Y aqu\u00ed lo importante sera configurar la instalaci\u00f3n de nuestro Visual Studio para tener todos los complementos necesarios y as\u00ed aprovechar al m\u00e1ximo este software. Tenemos 4 pesta\u00f1as de opciones de configuraci\u00f3n: Cargas de trabajo, Componentes individuales, Paquetes de idioma y Ubicaciones de instalaci\u00f3n. A continuaci\u00f3n encontraras las opciones que deber\u00e1s marcar en cada pesta\u00f1a de configuraci\u00f3n. Cargas de trabajo. Desarrollo de ASP.NET y web. Desarrollo de Python. Desarrollo de Node.js. Desarrollo de la interfaz de usuario de aplicaciones multiplataforma de .NET. Desarrollo de la plataforma universal de Windows. Almacenamiento y procesamiento de datos. Componentes individuales. .NET 6.0 Runtime (Long Term Support). .NET 7.0 Runtime. .NET Core 3.1 Runtime (Long Term Support). .NET MAUI SDK for Android. .NET MAUI SDK for iOS. .NET MAUI SDK For Mac Catalyst. .NET MAUI SDK For Windows. .NET Native. .NET SDK for Android. .NET SDK for iOS. .NET WebAssembly for Mac Catalyst. Paquete de compatibilidad de .NET Framework 4.7.2. Paquete de compatibilidad de .NET Framework 4.8. Plantillas de proyecto y de elemento de .NET Framework. SDK de .NET. SDK de .NET Framework 4.8. \u261d Las opciones de los dem\u00e1s apartados de los Componentes individuales se deber\u00e1n mantener con la configuraci\u00f3n por defecto. Paquetes de idiomas. English. Espa\u00f1ol. \u261d Si bien estos idiomas son lo que se sugieren, es posible agregar cualquier otro de la lista bajo la premisa de que se domine bien el idioma seleccionado. Ubicaci\u00f3n de instalaci\u00f3n. La configuraci\u00f3n de este apartado puede ser la que esta por defecto, pero en caso de tener mas de un HDD o SSD, se puede seleccionar una ruta personalizada, todo esto con el fin de optimizar la memoria de almacenamiento disponible. Ya que hemos conlcuido con las opciones de configuraci\u00f3n podemos proceder a dar click en el boton de Instalar, dejando la opci\u00f3n de Instalar durante la descarga que esta por defecto. Aparecer\u00e1 una pantalla que nos muestra el porcentaje de descarga y el estatus de los paquetes instalados. \u26a0\ufe0f Lo mejor sera esperar a que se termine esta instalaci\u00f3n, conecta tu computadora con su cable de alimentaci\u00f3n y te recomendamos no instalar otro software mientras este proceso se lleva a cabo. Terminada la instalaci\u00f3n tendremos acceso a tres nuevos botones, Modificar , Iniciar y M\u00e1s. El primero nos servir\u00e1 para cambiar las configuraciones de instalaci\u00f3n que ya revisamos durante la instalaci\u00f3n, el segundo lanzara el programa de Visual Studio y el \u00faltimo nos permitir\u00e1 tener acceso a algunas herramientas relacionadas con la instalaci\u00f3n. Ahora que cuentas con esta gran herramienta \u00bfNo te gustar\u00eda dar tus primeros pasos us\u00e1ndola?, atr\u00e9vete a explorarla y conocer algunas funciones b\u00e1sicas que tiene para ti dando click AQUI .","title":"Instalar Visual Studio Community."},{"location":"InductionTools/#instalar-visual-studio-code","text":"Si ya has descargado el archivo VSCodeUserSetup-x64-1.74.1 pasaremos a la etapa de instalaci\u00f3n, de lo contrario descarga aqu\u00ed . Daremos doble click al programa de instalaci\u00f3n ya mencionado y nos aparecer\u00e1 la ventana de confirmaci\u00f3n para ejecutar a instalaci\u00f3n, damos click en Ejecutar. Ahora veremos el Acuerdo de Licencia, se sugiere leerlo y posteriormente cambiar a la opci\u00f3n Acepto el acuerdo situada en la parte inferior de la ventana . Y damos siguiente . En la siguiente ventana debemos seleccionar la carpeta de destino, se puede dejar la que se muestra por defecto, pero esto depender\u00e1 si es que tenemos mas de un medio de almacenamiento (HDD o SDD), ya que esto sera de importancia para optimizar la memoria. Despu\u00e9s de realizar la selecci\u00f3n volvemos a dar click en siguiente. Nuevamente nos aparece una selecci\u00f3n, en este caso la de la carpeta del men\u00fa de inicio. Se recomienda dejar la que esta por defecto. Y se da click en siguiente. Se muestran opciones de para la selecci\u00f3n de las tareas adicionales. Se deben marcar las que se muestran en la imagen. Y como en los pasos anteriores damos nuevamente a siguiente. Y ahora estamos listos para instalar, solo queda ir al bot\u00f3n de Instalar y permitimos que se realice esta acci\u00f3n. \u26a0\ufe0f Lo mejor sera esperar a que se termine esta instalaci\u00f3n, conecta tu computadora con su cable de alimentaci\u00f3n y te recomendamos no instalar otro software mientras este proceso se lleva a cabo. Y listo tu software esta instalado, puedes lanzarlo dejando la opci\u00f3n de Ejecutar Visual Studio Code y haciendo click en Finalizar , o a trav\u00e9s de los accesos directos que se mencionan en el apartado Usemos Visual Studio Code . Es hora de que conozcas mas a fondo esta incre\u00edble aplicaci\u00f3n, da click AQUI para mas informaci\u00f3n.","title":"Instalar Visual Studio Code."},{"location":"InductionTools/#obtener-correo-personal-apsys","text":"Para poder tener tu correo personal e \u00fanico que te identificara dentro de Apsys, deber\u00e1s ponerte en contacto con @oscar_sanchez, a trav\u00e9s de correo electr\u00f3nico.","title":"Obtener correo personal Apsys."},{"location":"InductionTools/#como-instalamos-nodejs","text":"Es esencial el uso de herramientas como las interfaces de linea de comandos o consolas como se conocen com\u00fanmente. Y para el caso de la instalaci\u00f3n del complemento node.js tendremos que recurrir al uso de alguna de las herramientas ya mencionadas. Se sugiere utilizar la herramienta s\u00edmbolo del sistema, la cual ya esta integrada en el sistema operativo windows, por lo que no deber\u00eda haber mayor problema para poder ejecutarlo. Antes de todo instalaremos en Node Version Manager(nvm), siguiendo los pasos descritos aqui . Presionamos al mismo tiempo en nuestro teclado la tecla windows y r , se desplegara la aplicaci\u00f3n Ejecutar. Escribimos cmd en la aplicaci\u00f3n Ejecutar y damos enter. Aparecer\u00e1 la ventana de la interfaz de linea de comando (\u201ds\u00edmbolo del sistema\u201d). \ud83d\udca1 Es importante verificar que el s\u00edmbolo del sistema se este ejecutando como Administrador. Verificamos la disponibilidad de versiones en la documentaci\u00f3n de node.js y escribimos en la consola. [server] $ nvm install v 'aqui va la version' Posterior a la instalaci\u00f3n establecemos la versi\u00f3n de node.js que se utilizara. [server] $ nvm use v 'versi\u00f3n del node.js' Now using node v 'versi\u00f3n del node.js' ( npm v ) Comprobamos la versi\u00f3n de node.js que se esta ejecutando ingresando la siguiente linea: [server] $ node -v v 'versi\u00f3n del node.js' Por \u00faltimo deberemos verificar y/o instalar el Node Package Manager(npm), para esto escribiremos en la consola lo siguiente: [server] $ npm install -g npm Y de manera similar como con el node.js, revisamos la versi\u00f3n del npm con el siguiente comando: [server] $ npm -v \u261d Es muy recomendable que cada que te integres o inicies alg\u00fan proyecto verifiques que versi\u00f3n de node y npm se requiere, preg\u00fantale a tu coach o compa\u00f1eros de proyecto si tienes dudas. Si te gustar\u00eda saber mas de la herramienta node.js y sus complementos visita su sitio nodejs.org . Usemos Visual Studio Code Usemos Visual Studio Usemos el gestionador de bases de datos. \ud83d\udc49 Tienes preguntas? Ponte en contacto con alguno de tus compa\u00f1eros a trav\u00e9s de los medios que se te han proporcionado.","title":"Como instalamos node.js"},{"location":"InductionTools/Usemos%20Visual%20Studio%20Code%206523405cead146ed9167afb69b843478/","text":"Usemos Visual Studio Code Primeros pasos\u2026 \u00bfQue es el Front End? La parte de un sitio web con la que el usuario interactua directamente se denomina interfaz de usuario o simplemente interfaz. Se podr\u00eda decir que es la parte del cliente de una aplicaci\u00f3n. Incluye todo lo que los usuarios experimentan: colores, estilos, im\u00e1genes, gr\u00e1ficos, tablas botones, animaciones, etc. Para esta parte del desarrollo de software se utilizaran principalmente lenguajes como HTML, CSS y JavaScript. Quien se encarga del Front End se encargan de implementar la estructura, dise\u00f1o, comportamiento y contenido de todo lo que se vera en el navegador por el usuario. Las vistas del Front End pueden ser sitios web, aplicaciones web o aplicaciones m\u00f3viles. Tal que la capacidad de respuesta y el rendimiento son los objetivos principales de este apartado. Cuando se hace desarrollo de Front End se debe probar que el sitio o aplicaci\u00f3n responda, que los elementos visuales aparezcan correctamente, y que las funciones se comporten correctamente. Interfaz Para poder lanzar la aplicaci\u00f3n de Visual Studio Code (Visual Code), podremos utilizar dos maneras, la primera de ellas a trav\u00e9s del icono que se encuentra en el escritorio. Y la segundo sera buscando la aplicaci\u00f3n en el men\u00fa de inicio. En cualquiera de los dos casos hacemos doble click y se lanzara nuestra aplicaci\u00f3n, despleg\u00e1ndose la pantalla de inicio que es como la que se muestra a continuaci\u00f3n. En el \u00e1rea de trabajo encontraremos algunas combinaciones para atajos bastante \u00fatiles, conforme vayas trabajando en desarrollo de proyectos, entender\u00e1s para que se usan estos atajos. Personalizaci\u00f3n Algo que consideramos importante es que tu experiencia al trabajar en el desarrollo de software sea la mejor, y una parte esencial de esta experiencia es la visualizaci\u00f3n de la aplicaci\u00f3n, por lo que aprovecharemos en esta ocasi\u00f3n para ense\u00f1arte r\u00e1pidamente como se lleva a cabo la personalizaci\u00f3n del tema del Visual Code. Nos dirigimos a la parte inferior izquierda de la pagina de inicio y daremos click en el bot\u00f3n de configuraci\u00f3n que es el que se indica en la imagen siguiente. Hacemos click en la opci\u00f3n Color Theme lo cual nos desplegara las opciones de tema que podremos utilizar. - Se pueden descargar mas temas si es que no te gusta alguno de los preinstalados, solo debemos dar click en la opci\u00f3n Browse Additional Color Themes\u2026 Extensiones Otra de las cosas interesantes que nos ofrece el Visual Code es que podemos agregar complementos de manera muy sencilla y estos nos ayudaran al desarrollo de nuestros proyectos. Estos complementos se conocen como extensiones y en la barra lateral izquierda podremos ir a una secci\u00f3n donde visualizaremos las extensiones que tenemos instaladas. Ah\u00ed tambi\u00e9n encontraras un buscador donde podr\u00e1s buscar de manera mas especifica extensiones, ya sea que est\u00e9n instaladas o que se puedan descargar las veras enlistadas en la barra lateral. Te recomendamos que instales las siguientes extensiones: Color Highlight Te cambia el fondo de los c\u00f3digos en hexadecimal que representen un c\u00f3digo de color. CSS Flexbox Cheatsheet Esta extensi\u00f3n te permitir\u00e1 abrir de manera directa una vista de referencia de los estilos usando flexbox, herramienta fundamental para dise\u00f1o. ES7 React/Redux/GraphQL/React-Native snippets Esta extensi\u00f3n nos ayudara a agregar funciones en todos los proyectos donde se utiliza React, que es una biblioteca de las mas usadas para desarrollo de Front End . Lanzar plataforma Para poder visualizar el Front End debemos de lanzar nuestra plataforma desde Visual Code, para hacer esto primero debemos abrir la carpeta donde se encuentra nuestro proyecto. Y apara esto nos dirigimos al men\u00fa superior y buscamos el bot\u00f3n File, al dar click en el se desplegaran varias opciones. Ahora debemos dar click en la opci\u00f3n Open Folder\u2026, se nos desplegara una ventana del explorador de archivos, y aqui buscaremos y seleccionaremos la carpeta de nuestro proyecto a lanzar. Ya cargado el proyecto nos aparecer\u00e1 la siguiente pantalla. Un paso importante sera instalar el proyecto, y para esto utilizaremos la herramienta npm (si no la tienes instalada puedes verificar como hacerlo AQUI ). Debemos abrir la consola de Visual Code, y para esto nos dirigimos al bot\u00f3n de View , y seleccionamos la opci\u00f3n Terminal. Aparecer\u00e1 en la parte inferior del \u00e1rea de trabajo una terminal y en la primer linea tendremos la direcci\u00f3n de la carpeta de nuestro proyecto. Escribimos lo siguiente: npm install Debemos esperar a que se instale nuestro proyecto, la manera en que sabremos que ya se completo el proceso es que vuelve a aparecer la ruta de nuestro proyecto como cuando se despleg\u00f3 la terminal. Y ahora si, para poder lanzar nuestro proyecto utilizaremos el siguiente comando. npm start Se abrir\u00e1 una nueva pesta\u00f1a en el navegador que estemos utilizando o en el que tengamos como predeterminado. De esa manera visualizaremos la parte del Front End de nuestro proyecto. \u261d En caso de que no se inicie correctamente el proyecto te recomendamos acercarte a alguno de tus compa\u00f1eros o directamente a tu coach, ya que uno de los problemas mas comunes con los que te encontraras sera el versionado. \u00a1FELICIDADES HAS CONCLUIDO CON ESTA SECCI\u00d3N! Si aun no los has revisado checa esta otra documentaci\u00f3n\u2026 Usemos Visual Studio Usemos el gestionador de bases de datos.","title":"Usemos Visual Code"},{"location":"InductionTools/Usemos%20Visual%20Studio%20Code%206523405cead146ed9167afb69b843478/#usemos-visual-studio-code","text":"","title":"Usemos Visual Studio Code"},{"location":"InductionTools/Usemos%20Visual%20Studio%20Code%206523405cead146ed9167afb69b843478/#primeros-pasos","text":"","title":"Primeros pasos\u2026"},{"location":"InductionTools/Usemos%20Visual%20Studio%20Code%206523405cead146ed9167afb69b843478/#que-es-el-front-end","text":"La parte de un sitio web con la que el usuario interactua directamente se denomina interfaz de usuario o simplemente interfaz. Se podr\u00eda decir que es la parte del cliente de una aplicaci\u00f3n. Incluye todo lo que los usuarios experimentan: colores, estilos, im\u00e1genes, gr\u00e1ficos, tablas botones, animaciones, etc. Para esta parte del desarrollo de software se utilizaran principalmente lenguajes como HTML, CSS y JavaScript. Quien se encarga del Front End se encargan de implementar la estructura, dise\u00f1o, comportamiento y contenido de todo lo que se vera en el navegador por el usuario. Las vistas del Front End pueden ser sitios web, aplicaciones web o aplicaciones m\u00f3viles. Tal que la capacidad de respuesta y el rendimiento son los objetivos principales de este apartado. Cuando se hace desarrollo de Front End se debe probar que el sitio o aplicaci\u00f3n responda, que los elementos visuales aparezcan correctamente, y que las funciones se comporten correctamente.","title":"\u00bfQue es el Front End?"},{"location":"InductionTools/Usemos%20Visual%20Studio%20Code%206523405cead146ed9167afb69b843478/#interfaz","text":"Para poder lanzar la aplicaci\u00f3n de Visual Studio Code (Visual Code), podremos utilizar dos maneras, la primera de ellas a trav\u00e9s del icono que se encuentra en el escritorio. Y la segundo sera buscando la aplicaci\u00f3n en el men\u00fa de inicio. En cualquiera de los dos casos hacemos doble click y se lanzara nuestra aplicaci\u00f3n, despleg\u00e1ndose la pantalla de inicio que es como la que se muestra a continuaci\u00f3n. En el \u00e1rea de trabajo encontraremos algunas combinaciones para atajos bastante \u00fatiles, conforme vayas trabajando en desarrollo de proyectos, entender\u00e1s para que se usan estos atajos.","title":"Interfaz"},{"location":"InductionTools/Usemos%20Visual%20Studio%20Code%206523405cead146ed9167afb69b843478/#personalizacion","text":"Algo que consideramos importante es que tu experiencia al trabajar en el desarrollo de software sea la mejor, y una parte esencial de esta experiencia es la visualizaci\u00f3n de la aplicaci\u00f3n, por lo que aprovecharemos en esta ocasi\u00f3n para ense\u00f1arte r\u00e1pidamente como se lleva a cabo la personalizaci\u00f3n del tema del Visual Code. Nos dirigimos a la parte inferior izquierda de la pagina de inicio y daremos click en el bot\u00f3n de configuraci\u00f3n que es el que se indica en la imagen siguiente. Hacemos click en la opci\u00f3n Color Theme lo cual nos desplegara las opciones de tema que podremos utilizar. - Se pueden descargar mas temas si es que no te gusta alguno de los preinstalados, solo debemos dar click en la opci\u00f3n Browse Additional Color Themes\u2026","title":"Personalizaci\u00f3n"},{"location":"InductionTools/Usemos%20Visual%20Studio%20Code%206523405cead146ed9167afb69b843478/#extensiones","text":"Otra de las cosas interesantes que nos ofrece el Visual Code es que podemos agregar complementos de manera muy sencilla y estos nos ayudaran al desarrollo de nuestros proyectos. Estos complementos se conocen como extensiones y en la barra lateral izquierda podremos ir a una secci\u00f3n donde visualizaremos las extensiones que tenemos instaladas. Ah\u00ed tambi\u00e9n encontraras un buscador donde podr\u00e1s buscar de manera mas especifica extensiones, ya sea que est\u00e9n instaladas o que se puedan descargar las veras enlistadas en la barra lateral. Te recomendamos que instales las siguientes extensiones: Color Highlight Te cambia el fondo de los c\u00f3digos en hexadecimal que representen un c\u00f3digo de color. CSS Flexbox Cheatsheet Esta extensi\u00f3n te permitir\u00e1 abrir de manera directa una vista de referencia de los estilos usando flexbox, herramienta fundamental para dise\u00f1o. ES7 React/Redux/GraphQL/React-Native snippets Esta extensi\u00f3n nos ayudara a agregar funciones en todos los proyectos donde se utiliza React, que es una biblioteca de las mas usadas para desarrollo de Front End .","title":"Extensiones"},{"location":"InductionTools/Usemos%20Visual%20Studio%20Code%206523405cead146ed9167afb69b843478/#lanzar-plataforma","text":"Para poder visualizar el Front End debemos de lanzar nuestra plataforma desde Visual Code, para hacer esto primero debemos abrir la carpeta donde se encuentra nuestro proyecto. Y apara esto nos dirigimos al men\u00fa superior y buscamos el bot\u00f3n File, al dar click en el se desplegaran varias opciones. Ahora debemos dar click en la opci\u00f3n Open Folder\u2026, se nos desplegara una ventana del explorador de archivos, y aqui buscaremos y seleccionaremos la carpeta de nuestro proyecto a lanzar. Ya cargado el proyecto nos aparecer\u00e1 la siguiente pantalla. Un paso importante sera instalar el proyecto, y para esto utilizaremos la herramienta npm (si no la tienes instalada puedes verificar como hacerlo AQUI ). Debemos abrir la consola de Visual Code, y para esto nos dirigimos al bot\u00f3n de View , y seleccionamos la opci\u00f3n Terminal. Aparecer\u00e1 en la parte inferior del \u00e1rea de trabajo una terminal y en la primer linea tendremos la direcci\u00f3n de la carpeta de nuestro proyecto. Escribimos lo siguiente: npm install Debemos esperar a que se instale nuestro proyecto, la manera en que sabremos que ya se completo el proceso es que vuelve a aparecer la ruta de nuestro proyecto como cuando se despleg\u00f3 la terminal. Y ahora si, para poder lanzar nuestro proyecto utilizaremos el siguiente comando. npm start Se abrir\u00e1 una nueva pesta\u00f1a en el navegador que estemos utilizando o en el que tengamos como predeterminado. De esa manera visualizaremos la parte del Front End de nuestro proyecto. \u261d En caso de que no se inicie correctamente el proyecto te recomendamos acercarte a alguno de tus compa\u00f1eros o directamente a tu coach, ya que uno de los problemas mas comunes con los que te encontraras sera el versionado.","title":"Lanzar plataforma"},{"location":"InductionTools/Usemos%20Visual%20Studio%20Code%206523405cead146ed9167afb69b843478/#felicidades-has-concluido-con-esta-seccion","text":"Si aun no los has revisado checa esta otra documentaci\u00f3n\u2026 Usemos Visual Studio Usemos el gestionador de bases de datos.","title":"\u00a1FELICIDADES HAS CONCLUIDO CON ESTA SECCI\u00d3N!"},{"location":"InductionTools/Usemos%20Visual%20Studio%20ee10e243d40246b480dced765d9016fb/","text":"Usemos Visual Studio Primeros pasos\u2026 \u00bfQue es el Back End? Cuando hablamos de este concepto en el desarrollo de software nos referimos a un proceso del servidor e incluso hoy d\u00eda pueden ser procesos que llevan a cabo en la nube. Cuando hacemos desarrollo en el Back End hablamos de la recolecci\u00f3n, guardado y gesti\u00f3n de la informaci\u00f3n (bases de datos). Es decir, todo aquello con lo que el usuario no interact\u00faa directamente; Como ejemplo podr\u00edamos tomar las APIs (Interfaces de programaci\u00f3n de aplicaciones por sus siglas en ingles), las librer\u00edas y componentes del sistema. Visual Studio de Microsoft es una de las plataformas mas usadas en el mundo para desarrollo de software y nos sera de gran ayuda para trabajar el apartado del Back End de los proyectos, ya que esta cuenta con varias funcionalidades, entre las que se encuentran el generar c\u00f3digo para diferentes lenguajes de programaci\u00f3n, compilar, depurar, implementar, analizar y muchas otras cosas mas, por decir algo. Ahora es tu turno de aprender un poco mas de este software para que comiences a incursionar en el desarrollo del Back End: Interfaz Para poder lanzar el Visual Studio daremos doble click en el logo que ahora tenemos en el escritorio. O tambi\u00e9n podemos acceder a el a trav\u00e9s del men\u00fa de inicio. Veremos la pantalla de inicio. Tendremos disponibles las opciones de Clonar repositorio , Abrir un proyecto o soluci\u00f3n , Abrir una carpeta local , y crear un nuevo proyecto . Como apenas vamos empezando, abriremos un proyecto/soluci\u00f3n ya existente, y para esto hay dos formas. La primera sera buscar directamente dando click en la opci\u00f3n Abrir un proyecto o soluci\u00f3n , lo cual desplegara una ventana del explorador y deberemos buscar nuestro archivo con extensi\u00f3n .sln: Y por otro lado podemos simplemente ir directamente al archivo en nuestro explorador de archivos y dar doble click para que se lance en el Visual Studio. Ya que hemos inicializado el proyecto aparecera la siguiente pantalla, y lo cual representa que ya podemos trabajar en el. Como lanzar una webapi desde Visual Studio Hay diferentes formas de lanzar una webapi desde nuestra plataforma, pero como en esta ocasi\u00f3n solo veremos las dos formas b\u00e1sicas que te ayudaran al desarrollo de software. Ver en un navegador (View/Ver) Esta es la forma mas sencilla, pero cabe mencionar que si el programa presenta errores no se lanzara. Primero debemos ir a la barra lateral derecha, donde se encuentra el explorador del proyecto, ah\u00ed buscamos el apartado con extensi\u00f3n .webapi, se debe dar click derecho . Se desplegara el men\u00fa de opciones, buscamos y damos click en View/Ver y ah\u00ed mismo en la \u00fanica opci\u00f3n que nos aparecer\u00e1. Esta acci\u00f3n har\u00e1 que se abra una pesta\u00f1a en el navegador que este abierto en ese momento o el predeterminado, la cual corresponder\u00e1 al puerto de la webapi. Por depuraci\u00f3n/debugging Para lanzar la webapi por este m\u00e9todo, de igual manera que en el anterior buscamos y marcamos el apartado con extensi\u00f3n .webapi. Y la diferencia radicara en que para lanzar el programa haremos click en el bot\u00f3n IIS Express(\u00b4navegador\u00b4), y con esto cambiara el aspecto de nuestra interfaz, ya que en este m\u00e9todo de lanzamiento podremos monitorear mas a detalle la ejecuci\u00f3n de nuestra webapi. Tambi\u00e9n se abrir\u00e1 una nueva pesta\u00f1a en el navegador como se menciona en el m\u00e9todo anterior. \ud83d\udca1 Para poder detener la ejecuci\u00f3n de nuestra webapi sera suficiente con cerrar la pesta\u00f1a que se abre al lanzarla en cualquiera de los m\u00e9todos explicados. \u00bfDonde encuentro el nombre de la base de datos del proyecto? Una de las situaciones cotidianas con las que te encontraras sera el tener que restaurar la base o bases de datos correspondientes al proyecto que est\u00e9s desarrollando y para llevar a cabo esta acci\u00f3n sera necesario saber con que nombre el programa que corresponde al Back End encuentra dicha o dichas bases de datos, por lo que en este peque\u00f1o apartado te diremos como buscar ese nombre. Primero deber\u00e1s haber abierto el proyecto en cuesti\u00f3n, nos iremos a la barra lateral derecha que corresponde al explorador del proyecto. Buscamos el apartado con extensi\u00f3n .webapi, y lo desplegamos, ahi encontraremos varios archivos pero para este caso el que nos interesa sera uno llamado Web.config . Damos doble click sobre el archivo ya mencionado y podremos tener una vista del c\u00f3digo que compone dicho archivo, en esta vista deberemos buscar la palabra Database, y para esto tenemos dos opciones, la primera sera buscar directamente linea por linea, mientras que la segunda que por cierto es mucho mas f\u00e1cil sera simplemente presionando al mismo tiempo con eso se desplegara el buscador por palabras de Visual Studio, ingresamos la palabra Database . Y sabremos cual es la correcta basandonos en el siguiente ejemplo. Y listo ese es el nombre que necesitamos, puedes volver a la secci\u00f3n que corresponde a la restauraci\u00f3n de bases de datos desde AQUI. \u00a1FELICIDADES HAS CONCLUIDO CON ESTA SECCI\u00d3N! Si aun no los has revisado checa esta otra documentaci\u00f3n\u2026 Usemos Visual Studio Code Usemos el gestionador de bases de datos.","title":"Usemos Visual Studio"},{"location":"InductionTools/Usemos%20Visual%20Studio%20ee10e243d40246b480dced765d9016fb/#usemos-visual-studio","text":"","title":"Usemos Visual Studio"},{"location":"InductionTools/Usemos%20Visual%20Studio%20ee10e243d40246b480dced765d9016fb/#primeros-pasos","text":"","title":"Primeros pasos\u2026"},{"location":"InductionTools/Usemos%20Visual%20Studio%20ee10e243d40246b480dced765d9016fb/#que-es-el-back-end","text":"Cuando hablamos de este concepto en el desarrollo de software nos referimos a un proceso del servidor e incluso hoy d\u00eda pueden ser procesos que llevan a cabo en la nube. Cuando hacemos desarrollo en el Back End hablamos de la recolecci\u00f3n, guardado y gesti\u00f3n de la informaci\u00f3n (bases de datos). Es decir, todo aquello con lo que el usuario no interact\u00faa directamente; Como ejemplo podr\u00edamos tomar las APIs (Interfaces de programaci\u00f3n de aplicaciones por sus siglas en ingles), las librer\u00edas y componentes del sistema. Visual Studio de Microsoft es una de las plataformas mas usadas en el mundo para desarrollo de software y nos sera de gran ayuda para trabajar el apartado del Back End de los proyectos, ya que esta cuenta con varias funcionalidades, entre las que se encuentran el generar c\u00f3digo para diferentes lenguajes de programaci\u00f3n, compilar, depurar, implementar, analizar y muchas otras cosas mas, por decir algo. Ahora es tu turno de aprender un poco mas de este software para que comiences a incursionar en el desarrollo del Back End:","title":"\u00bfQue es el Back End?"},{"location":"InductionTools/Usemos%20Visual%20Studio%20ee10e243d40246b480dced765d9016fb/#interfaz","text":"Para poder lanzar el Visual Studio daremos doble click en el logo que ahora tenemos en el escritorio. O tambi\u00e9n podemos acceder a el a trav\u00e9s del men\u00fa de inicio. Veremos la pantalla de inicio. Tendremos disponibles las opciones de Clonar repositorio , Abrir un proyecto o soluci\u00f3n , Abrir una carpeta local , y crear un nuevo proyecto . Como apenas vamos empezando, abriremos un proyecto/soluci\u00f3n ya existente, y para esto hay dos formas. La primera sera buscar directamente dando click en la opci\u00f3n Abrir un proyecto o soluci\u00f3n , lo cual desplegara una ventana del explorador y deberemos buscar nuestro archivo con extensi\u00f3n .sln: Y por otro lado podemos simplemente ir directamente al archivo en nuestro explorador de archivos y dar doble click para que se lance en el Visual Studio. Ya que hemos inicializado el proyecto aparecera la siguiente pantalla, y lo cual representa que ya podemos trabajar en el.","title":"Interfaz"},{"location":"InductionTools/Usemos%20Visual%20Studio%20ee10e243d40246b480dced765d9016fb/#como-lanzar-una-webapi-desde-visual-studio","text":"Hay diferentes formas de lanzar una webapi desde nuestra plataforma, pero como en esta ocasi\u00f3n solo veremos las dos formas b\u00e1sicas que te ayudaran al desarrollo de software.","title":"Como lanzar una webapi desde Visual Studio"},{"location":"InductionTools/Usemos%20Visual%20Studio%20ee10e243d40246b480dced765d9016fb/#ver-en-un-navegador-viewver","text":"Esta es la forma mas sencilla, pero cabe mencionar que si el programa presenta errores no se lanzara. Primero debemos ir a la barra lateral derecha, donde se encuentra el explorador del proyecto, ah\u00ed buscamos el apartado con extensi\u00f3n .webapi, se debe dar click derecho . Se desplegara el men\u00fa de opciones, buscamos y damos click en View/Ver y ah\u00ed mismo en la \u00fanica opci\u00f3n que nos aparecer\u00e1. Esta acci\u00f3n har\u00e1 que se abra una pesta\u00f1a en el navegador que este abierto en ese momento o el predeterminado, la cual corresponder\u00e1 al puerto de la webapi.","title":"Ver en un navegador (View/Ver)"},{"location":"InductionTools/Usemos%20Visual%20Studio%20ee10e243d40246b480dced765d9016fb/#por-depuraciondebugging","text":"Para lanzar la webapi por este m\u00e9todo, de igual manera que en el anterior buscamos y marcamos el apartado con extensi\u00f3n .webapi. Y la diferencia radicara en que para lanzar el programa haremos click en el bot\u00f3n IIS Express(\u00b4navegador\u00b4), y con esto cambiara el aspecto de nuestra interfaz, ya que en este m\u00e9todo de lanzamiento podremos monitorear mas a detalle la ejecuci\u00f3n de nuestra webapi. Tambi\u00e9n se abrir\u00e1 una nueva pesta\u00f1a en el navegador como se menciona en el m\u00e9todo anterior. \ud83d\udca1 Para poder detener la ejecuci\u00f3n de nuestra webapi sera suficiente con cerrar la pesta\u00f1a que se abre al lanzarla en cualquiera de los m\u00e9todos explicados.","title":"Por depuraci\u00f3n/debugging"},{"location":"InductionTools/Usemos%20Visual%20Studio%20ee10e243d40246b480dced765d9016fb/#donde-encuentro-el-nombre-de-la-base-de-datos-del-proyecto","text":"Una de las situaciones cotidianas con las que te encontraras sera el tener que restaurar la base o bases de datos correspondientes al proyecto que est\u00e9s desarrollando y para llevar a cabo esta acci\u00f3n sera necesario saber con que nombre el programa que corresponde al Back End encuentra dicha o dichas bases de datos, por lo que en este peque\u00f1o apartado te diremos como buscar ese nombre. Primero deber\u00e1s haber abierto el proyecto en cuesti\u00f3n, nos iremos a la barra lateral derecha que corresponde al explorador del proyecto. Buscamos el apartado con extensi\u00f3n .webapi, y lo desplegamos, ahi encontraremos varios archivos pero para este caso el que nos interesa sera uno llamado Web.config . Damos doble click sobre el archivo ya mencionado y podremos tener una vista del c\u00f3digo que compone dicho archivo, en esta vista deberemos buscar la palabra Database, y para esto tenemos dos opciones, la primera sera buscar directamente linea por linea, mientras que la segunda que por cierto es mucho mas f\u00e1cil sera simplemente presionando al mismo tiempo con eso se desplegara el buscador por palabras de Visual Studio, ingresamos la palabra Database . Y sabremos cual es la correcta basandonos en el siguiente ejemplo. Y listo ese es el nombre que necesitamos, puedes volver a la secci\u00f3n que corresponde a la restauraci\u00f3n de bases de datos desde AQUI.","title":"\u00bfDonde encuentro el nombre de la base de datos del proyecto?"},{"location":"InductionTools/Usemos%20Visual%20Studio%20ee10e243d40246b480dced765d9016fb/#felicidades-has-concluido-con-esta-seccion","text":"Si aun no los has revisado checa esta otra documentaci\u00f3n\u2026 Usemos Visual Studio Code Usemos el gestionador de bases de datos.","title":"\u00a1FELICIDADES HAS CONCLUIDO CON ESTA SECCI\u00d3N!"},{"location":"InductionTools/Usemos%20el%20gestionador%20de%20bases%20de%20datos%20fd9ae6110c8343dea703aaca3985a015/","text":"Usemos el gestionador de bases de datos. Primeros pasos\u2026 \u00bfQue es una base de datos? Una base de datos es una recopilaci\u00f3n organizada de informaci\u00f3n o datos estructurados, que para nuestro caso se almacena de forma electr\u00f3nica. En desarrollo de software son esenciales ya que cualquier plataforma guarda su informaci\u00f3n en bases de datos, por lo que sera importante usar gestionadores de estas o como se conocen mejor Sistemas de Gesti\u00f3n de Bases de Datos(DBMS). Los datos de los tipos mas comunes de bases de datos en funcionamiento actualmente suelen ser utilizados en estructuras de series de tablas para de poder aumentar la eficacia del procesamiento. Nosotros como empresa a trav\u00e9s de un DBMS debemos acceder, gestionar, modificar, actualizar, controlar y organizar f\u00e1cilmente los datos. Para esto utilizaremos un lenguaje de consulta estructurada (SQL). Motor para la base de datos SQL Developer Dentro de Apsys utilizamos bases de datos de diversas plataformas desarolladas por nosotros, por lo que sera importante contar con un motor de bases datos, el cual permitira al gestionador llevar a cabo acciones como migraciones, modelado de bases de datos, ejecuciones de scripts y querys, etc. En nuestro caso y de manera estandarizada utilizamos como motor el SQL Developer de oracle. Para poder instalar dicho motor nos dirigiremos al siguiente link: ( Instalar SQL Developer ) SQL Server Management Studio (SSMS) Como gestionador de bases de datos utilizaremos este incre\u00edble software desarrollado por Microsoft el cual nos ofrece muy buena accesibilidad y funcionalidad para poder crear, respaldar, modificar, etc; nuestras bases de datos. Y como primer paso conoceremos su interfaz y algunas funciones muy b\u00e1sicas, as\u00ed que no te preocupes si no haz profundizado mucho en temas de bases de datos, con la herramienta que estas a punto de conocer veras la utilidad de utilizarlas y lo accesible que puede ser. Interfaz Para lanzar el SMSS tenemos que buscar en el menu de incio la aplicaci\u00f3n, lo encontraremos en la carpeta Microsoft SQL Tools \u2018version\u2019. Dando doble click se desplegara la plataforma como se muestra a continuaci\u00f3n. Y posteriormente observaremos la vista de inicio. Tendremos que autenticarnos para poder acceder a las funciones, si tienes dudas con respecto a las credenciales puedes pedir ayuda a alguno de tus compa\u00f1eros o a directamente a tu coach. Ya dentro de la aplicaci\u00f3n observaremos una barra lateral que nos muestra un explorador, aqu\u00ed podremos ver diferentes carpetas correspondientes a las bases de datos. Y en la parte superior nuestra barra de herramientas. Restaurar una base de datos La gran mayor\u00eda de las bases de datos que utilizaras al principio se te ser\u00e1n proporcionadas, por lo que en este inicio en el uso del SMSS aprenderemos a realizar una restauraci\u00f3n de base de datos. Primero deber\u00e1s tener a tu disposici\u00f3n la base de datos que restauraras, sabr\u00e1s identificarla por que tienen la extensi\u00f3n .bak. En el SMSS en la carpeta Databases daremos click derecho. Y seleccionaremos Restore Database\u2026 Se desplegara la siguiente ventana. Seleccionaremos Device y daremos click en el bot\u00f3n \u2018\u2026\u2019 que nos abrir\u00e1 una ventana de selecci\u00f3n de dispositivos de respaldo(Select backup devices). Hacemos click en Add, lo cual nos desplegara una ventana del explorador y deberemos seleccionar el archivo correspondiente a la base de datos que se restaurara. Seleccionamos nuestro archivo y procedemos a dar click en el boton OK. Ahora en nuestra ventana de dispositivos de seleccion de respaldo aparecera la ruta de nuestro archivo, hacemos click nuevamente en OK. Veremos como el nombre de nuestro archivo aparece en el apartado Database. \u26a0\ufe0f Deber\u00e1s verificar el nombre de la base de datos en el programa correspondiente al Back End , como se explica en AQUI . Antes de continuar al siguiente paso. Si esta base de datos no ha sido restaurada bastara con dar click en OK y esperar a que el proceso se complete. En caso contrario ver al paso siguiente. Nos vamos a la opcion de la barra lateral llamada Options, y se debe marcar la casilla Overwrite the existing database (WITH REPLACE). Y finalizamos haciendo click en el bot\u00f3n OK , ya solo quedar\u00eda esperar a que finalice el proceso y la base de datos estar\u00e1 restaurada. \u00a1FELICIDADES HAS CONCLUIDO CON ESTA SECCI\u00d3N! Si aun no los has revisado checa esta otra documentaci\u00f3n\u2026 Usemos Visual Studio Usemos Visual Studio Code","title":"Usemos el gestionador de bases de datos"},{"location":"InductionTools/Usemos%20el%20gestionador%20de%20bases%20de%20datos%20fd9ae6110c8343dea703aaca3985a015/#usemos-el-gestionador-de-bases-de-datos","text":"","title":"Usemos el gestionador de bases de datos."},{"location":"InductionTools/Usemos%20el%20gestionador%20de%20bases%20de%20datos%20fd9ae6110c8343dea703aaca3985a015/#primeros-pasos","text":"","title":"Primeros pasos\u2026"},{"location":"InductionTools/Usemos%20el%20gestionador%20de%20bases%20de%20datos%20fd9ae6110c8343dea703aaca3985a015/#que-es-una-base-de-datos","text":"Una base de datos es una recopilaci\u00f3n organizada de informaci\u00f3n o datos estructurados, que para nuestro caso se almacena de forma electr\u00f3nica. En desarrollo de software son esenciales ya que cualquier plataforma guarda su informaci\u00f3n en bases de datos, por lo que sera importante usar gestionadores de estas o como se conocen mejor Sistemas de Gesti\u00f3n de Bases de Datos(DBMS). Los datos de los tipos mas comunes de bases de datos en funcionamiento actualmente suelen ser utilizados en estructuras de series de tablas para de poder aumentar la eficacia del procesamiento. Nosotros como empresa a trav\u00e9s de un DBMS debemos acceder, gestionar, modificar, actualizar, controlar y organizar f\u00e1cilmente los datos. Para esto utilizaremos un lenguaje de consulta estructurada (SQL).","title":"\u00bfQue es una base de datos?"},{"location":"InductionTools/Usemos%20el%20gestionador%20de%20bases%20de%20datos%20fd9ae6110c8343dea703aaca3985a015/#motor-para-la-base-de-datos-sql-developer","text":"Dentro de Apsys utilizamos bases de datos de diversas plataformas desarolladas por nosotros, por lo que sera importante contar con un motor de bases datos, el cual permitira al gestionador llevar a cabo acciones como migraciones, modelado de bases de datos, ejecuciones de scripts y querys, etc. En nuestro caso y de manera estandarizada utilizamos como motor el SQL Developer de oracle. Para poder instalar dicho motor nos dirigiremos al siguiente link: ( Instalar SQL Developer )","title":"Motor para la base de datos SQL Developer"},{"location":"InductionTools/Usemos%20el%20gestionador%20de%20bases%20de%20datos%20fd9ae6110c8343dea703aaca3985a015/#sql-server-management-studio-ssms","text":"Como gestionador de bases de datos utilizaremos este incre\u00edble software desarrollado por Microsoft el cual nos ofrece muy buena accesibilidad y funcionalidad para poder crear, respaldar, modificar, etc; nuestras bases de datos. Y como primer paso conoceremos su interfaz y algunas funciones muy b\u00e1sicas, as\u00ed que no te preocupes si no haz profundizado mucho en temas de bases de datos, con la herramienta que estas a punto de conocer veras la utilidad de utilizarlas y lo accesible que puede ser.","title":"SQL Server Management Studio (SSMS)"},{"location":"InductionTools/Usemos%20el%20gestionador%20de%20bases%20de%20datos%20fd9ae6110c8343dea703aaca3985a015/#interfaz","text":"Para lanzar el SMSS tenemos que buscar en el menu de incio la aplicaci\u00f3n, lo encontraremos en la carpeta Microsoft SQL Tools \u2018version\u2019. Dando doble click se desplegara la plataforma como se muestra a continuaci\u00f3n. Y posteriormente observaremos la vista de inicio. Tendremos que autenticarnos para poder acceder a las funciones, si tienes dudas con respecto a las credenciales puedes pedir ayuda a alguno de tus compa\u00f1eros o a directamente a tu coach. Ya dentro de la aplicaci\u00f3n observaremos una barra lateral que nos muestra un explorador, aqu\u00ed podremos ver diferentes carpetas correspondientes a las bases de datos. Y en la parte superior nuestra barra de herramientas.","title":"Interfaz"},{"location":"InductionTools/Usemos%20el%20gestionador%20de%20bases%20de%20datos%20fd9ae6110c8343dea703aaca3985a015/#restaurar-una-base-de-datos","text":"La gran mayor\u00eda de las bases de datos que utilizaras al principio se te ser\u00e1n proporcionadas, por lo que en este inicio en el uso del SMSS aprenderemos a realizar una restauraci\u00f3n de base de datos. Primero deber\u00e1s tener a tu disposici\u00f3n la base de datos que restauraras, sabr\u00e1s identificarla por que tienen la extensi\u00f3n .bak. En el SMSS en la carpeta Databases daremos click derecho. Y seleccionaremos Restore Database\u2026 Se desplegara la siguiente ventana. Seleccionaremos Device y daremos click en el bot\u00f3n \u2018\u2026\u2019 que nos abrir\u00e1 una ventana de selecci\u00f3n de dispositivos de respaldo(Select backup devices). Hacemos click en Add, lo cual nos desplegara una ventana del explorador y deberemos seleccionar el archivo correspondiente a la base de datos que se restaurara. Seleccionamos nuestro archivo y procedemos a dar click en el boton OK. Ahora en nuestra ventana de dispositivos de seleccion de respaldo aparecera la ruta de nuestro archivo, hacemos click nuevamente en OK. Veremos como el nombre de nuestro archivo aparece en el apartado Database. \u26a0\ufe0f Deber\u00e1s verificar el nombre de la base de datos en el programa correspondiente al Back End , como se explica en AQUI . Antes de continuar al siguiente paso. Si esta base de datos no ha sido restaurada bastara con dar click en OK y esperar a que el proceso se complete. En caso contrario ver al paso siguiente. Nos vamos a la opcion de la barra lateral llamada Options, y se debe marcar la casilla Overwrite the existing database (WITH REPLACE). Y finalizamos haciendo click en el bot\u00f3n OK , ya solo quedar\u00eda esperar a que finalice el proceso y la base de datos estar\u00e1 restaurada.","title":"Restaurar una base de datos"},{"location":"InductionTools/Usemos%20el%20gestionador%20de%20bases%20de%20datos%20fd9ae6110c8343dea703aaca3985a015/#felicidades-has-concluido-con-esta-seccion","text":"Si aun no los has revisado checa esta otra documentaci\u00f3n\u2026 Usemos Visual Studio Usemos Visual Studio Code","title":"\u00a1FELICIDADES HAS CONCLUIDO CON ESTA SECCI\u00d3N!"},{"location":"InternalProcedures/","text":"Documentaci\u00f3n para Procesos Internos de Apsys. Esta secci\u00f3n esta dedicada a tener un acervo de informaci\u00f3n de consulta para nuestro equipo de trabajo aqui en Apsys, aqui encontraras tutoriales para implementar las distintas plantillas con las que contamos en Apsys, asi como tambien de algunas operaciones que de manera estandarizada realizamos dentro del desarrollo de nuestras activadades del dia a dia. Info Recuerda que este apartado tambien tiene FAQs para ayudarte a resolver dudas de manera mas rapida y facil.","title":"Inicio"},{"location":"InternalProcedures/#documentacion-para-procesos-internos-de-apsys","text":"Esta secci\u00f3n esta dedicada a tener un acervo de informaci\u00f3n de consulta para nuestro equipo de trabajo aqui en Apsys, aqui encontraras tutoriales para implementar las distintas plantillas con las que contamos en Apsys, asi como tambien de algunas operaciones que de manera estandarizada realizamos dentro del desarrollo de nuestras activadades del dia a dia. Info Recuerda que este apartado tambien tiene FAQs para ayudarte a resolver dudas de manera mas rapida y facil.","title":"Documentaci\u00f3n para Procesos Internos de Apsys."},{"location":"InternalProcedures/FAQ/","text":"Preguntas Frecuentes \u00bfComo accedo a un repositorio? Se debe pedir asistencia de cualquiera de los team-leaders de nuestro equipo Apsys, para que se te conceda el acceso a un repositorio en GitHub. \u00bfComo creo una copia (clon), de un repositorio en una carpeta de mi PC? Para realizar esto revisa que tengas instalado el software TortoiseGit, desde la pgina de GitHub debemos ir a donde se encuentra nuestro repositorio y dar click en el b\u00f3ton <> Code , el cual se caracteriza por ser de color verde, se desplegara una peque\u00f1a ventana y en esta daremos click en el b\u00f3ton de copia. Posteriormente debes ubicarte en la carpeta donde se realizara la copia. Click derecho dentro de la carpeta y seleccionamos la opci\u00f3n TortoiseGit , posteriormente damos click en Git Clone... , pegamos la ruta que tenemos en el porta papeles. Click en Ok y esperamos a que se realice la copia.","title":"FAQ's"},{"location":"InternalProcedures/FAQ/#preguntas-frecuentes","text":"","title":"Preguntas Frecuentes"},{"location":"InternalProcedures/FAQ/#como-accedo-a-un-repositorio","text":"Se debe pedir asistencia de cualquiera de los team-leaders de nuestro equipo Apsys, para que se te conceda el acceso a un repositorio en GitHub.","title":"\u00bfComo accedo a un repositorio?"},{"location":"InternalProcedures/FAQ/#como-creo-una-copia-clon-de-un-repositorio-en-una-carpeta-de-mi-pc","text":"Para realizar esto revisa que tengas instalado el software TortoiseGit, desde la pgina de GitHub debemos ir a donde se encuentra nuestro repositorio y dar click en el b\u00f3ton <> Code , el cual se caracteriza por ser de color verde, se desplegara una peque\u00f1a ventana y en esta daremos click en el b\u00f3ton de copia. Posteriormente debes ubicarte en la carpeta donde se realizara la copia. Click derecho dentro de la carpeta y seleccionamos la opci\u00f3n TortoiseGit , posteriormente damos click en Git Clone... , pegamos la ruta que tenemos en el porta papeles. Click en Ok y esperamos a que se realice la copia.","title":"\u00bfComo creo una copia (clon), de un repositorio en una carpeta de mi PC?"},{"location":"InternalProcedures/BackendTemplates/","text":"Guia de instalac\u00edon y primeros paso de las plantillas Apsys Templates Guia para instalar y usar una plantilla en backend. Instalaci\u00f3n Instalaci\u00f3n desde el Marketplace Para poder realizar la instalaci\u00f3n de la nueva plantilla debemos lanzar nuestra aplicaci\u00f3n de Visual Studio . Posteriormente procedemos a darle click a continuar sin c\u00f3digo(o continue without code si es que tienes la versi\u00f3n en ingles). Estaremos en la pantalla del \u00e1rea de trabajo de Visual Studio, ahora nos dirigiremos a la pesta\u00f1a de Se desplegara un peque\u00f1o men\u00fa del cual daremos click en el Administrador de extensiones. Esto nos mostrara una ventana donde veremos los diferentes tipos de extensiones, las instaladas y las disponibles para poder descargarse. Procederemos a dar click en Visual Studio Marketplace, y en el buscador escribiremos \u201capsys\u201d, como se indica en la imagen. Deberemos descargar el \u201cApsysBaseTemplate\u201d y nos aparecer\u00e1 un mensaje emergente, el cual indicara que la instalaci\u00f3n se llevara a cabo posterior a cerrar Visual Studio. Para continuar con la instalaci\u00f3n sera necesario cerrar por completo Visual Studio , y de manera autom\u00e1tica se lanzara el instalador. Nos preguntara si queremos modificar nuestro software y deberemos indicar que si con el bot\u00f3n \u201cModificar\u201d(o Modify si tienes la versi\u00f3n en ingles). Cuando se halla finalizado la instalaci\u00f3n al iniciar nuevamente Visual Studio y crear un nuevo proyecto, en nuestras plantillas aparecer\u00e1 la nueva plantilla. Y aunque esta manera de integrar la nueva plantilla es muy buena, no es la \u00fanica. Existe otra forma igualmente efectiva para integrar nuevas plantillas a nuestro ambiente de Visual Studio , la que consideramos como la forma \u201cmanual\u201d, se describe a continuaci\u00f3n: Instalaci\u00f3n Manual Para llevar a cabo esta manera de integrar la nueva plantilla, primero deberemos contar con el archivo .zip generado por Visual Studio al exportar la plantilla. Dicho archivo deberemos copiarlo en la siguiente ruta, evidentemente esta ruta se tendr\u00e1 que completar con lo correspondiente para cada equipo (PC). Si tienes mas de un disco duro, recuerda que deber\u00e1s buscar la ruta en el disco donde se tiene instalado Visual Studio . * \u2026 Documentos \\ Visual Studio 2022 \\ Templates \\ ProjectTemplates * Ya que nuestro archivo se encuentre en la ruta ya mencionada se realiza la extracci\u00f3n de archivos en la misma carpeta. De tal manera que tendremos una nueva carpeta con el nombre de nuestra nueva plantilla. Si hiciste los pasos como se indico deber\u00e1 de aparecer nuestra nueva plantilla en al crear un nuevo proyecto Uso de la Plantilla Para usar una nueva plantilla, al abrir Visual Studio nos dirigimos a crear un nuevo proyecto: y en el buscador buscamos la plantilla ya instalada: al seleccionarla nos creara el nuevo proyecto y nos pedir\u00e1 el nombre y algunos datos para donde ubicar el nuevo proyecto. al darle en crear se generara la base del nuevo proyecto:","title":"Instalacion y uso de Plantillas"},{"location":"InternalProcedures/BackendTemplates/#guia-de-instalacion-y-primeros-paso-de-las-plantillas-apsys-templates","text":"","title":"Guia de instalac\u00edon y primeros paso de las plantillas Apsys Templates"},{"location":"InternalProcedures/BackendTemplates/#guia-para-instalar-y-usar-una-plantilla-en-backend","text":"","title":"Guia para instalar y usar una plantilla en backend."},{"location":"InternalProcedures/BackendTemplates/#instalacion","text":"Instalaci\u00f3n desde el Marketplace Para poder realizar la instalaci\u00f3n de la nueva plantilla debemos lanzar nuestra aplicaci\u00f3n de Visual Studio . Posteriormente procedemos a darle click a continuar sin c\u00f3digo(o continue without code si es que tienes la versi\u00f3n en ingles). Estaremos en la pantalla del \u00e1rea de trabajo de Visual Studio, ahora nos dirigiremos a la pesta\u00f1a de Se desplegara un peque\u00f1o men\u00fa del cual daremos click en el Administrador de extensiones. Esto nos mostrara una ventana donde veremos los diferentes tipos de extensiones, las instaladas y las disponibles para poder descargarse. Procederemos a dar click en Visual Studio Marketplace, y en el buscador escribiremos \u201capsys\u201d, como se indica en la imagen. Deberemos descargar el \u201cApsysBaseTemplate\u201d y nos aparecer\u00e1 un mensaje emergente, el cual indicara que la instalaci\u00f3n se llevara a cabo posterior a cerrar Visual Studio. Para continuar con la instalaci\u00f3n sera necesario cerrar por completo Visual Studio , y de manera autom\u00e1tica se lanzara el instalador. Nos preguntara si queremos modificar nuestro software y deberemos indicar que si con el bot\u00f3n \u201cModificar\u201d(o Modify si tienes la versi\u00f3n en ingles). Cuando se halla finalizado la instalaci\u00f3n al iniciar nuevamente Visual Studio y crear un nuevo proyecto, en nuestras plantillas aparecer\u00e1 la nueva plantilla. Y aunque esta manera de integrar la nueva plantilla es muy buena, no es la \u00fanica. Existe otra forma igualmente efectiva para integrar nuevas plantillas a nuestro ambiente de Visual Studio , la que consideramos como la forma \u201cmanual\u201d, se describe a continuaci\u00f3n: Instalaci\u00f3n Manual Para llevar a cabo esta manera de integrar la nueva plantilla, primero deberemos contar con el archivo .zip generado por Visual Studio al exportar la plantilla. Dicho archivo deberemos copiarlo en la siguiente ruta, evidentemente esta ruta se tendr\u00e1 que completar con lo correspondiente para cada equipo (PC). Si tienes mas de un disco duro, recuerda que deber\u00e1s buscar la ruta en el disco donde se tiene instalado Visual Studio . * \u2026 Documentos \\ Visual Studio 2022 \\ Templates \\ ProjectTemplates * Ya que nuestro archivo se encuentre en la ruta ya mencionada se realiza la extracci\u00f3n de archivos en la misma carpeta. De tal manera que tendremos una nueva carpeta con el nombre de nuestra nueva plantilla. Si hiciste los pasos como se indico deber\u00e1 de aparecer nuestra nueva plantilla en al crear un nuevo proyecto","title":"Instalaci\u00f3n"},{"location":"InternalProcedures/BackendTemplates/#uso-de-la-plantilla","text":"Para usar una nueva plantilla, al abrir Visual Studio nos dirigimos a crear un nuevo proyecto: y en el buscador buscamos la plantilla ya instalada: al seleccionarla nos creara el nuevo proyecto y nos pedir\u00e1 el nombre y algunos datos para donde ubicar el nuevo proyecto. al darle en crear se generara la base del nuevo proyecto:","title":"Uso de la Plantilla"},{"location":"InternalProcedures/BackendTemplates/indexCreation/","text":"1er proyecto con una plantilla Dentro de Apsys y como busqueda de la mejora continua, hemos creado algunas plantillas, esto con el fiel objetivo de estandarizar nuestros procesos para el desarrollo del software. Y como primer ejercicio tendras la tarea de generar un indice b\u00e1sico utilizando una plantilla y siguiendo las instrucciones que encontraras a continuaci\u00f3n. Configuraci\u00f3n Deberas abrir el software Visual Studio, usea la plantilla de Apsys que instalamos previamente y con ella crearemos un nuevo proyecto llamado apsys.pokedex Hay que descargar el respaldo de la base de datos por medio del siguiente link: Pokedex DB Tambien iniciaremos el Microsoft SQL Management Studio y crearemos una nueva base de datos con el nombre pokedex.devel . Restauramos el respaldo a la base de datos que creamos. La selecci\u00f3n de la ruta depende de la carpeta en donde se guardo el respaldo de la base de datos que descargaste, en este ejemplo se guardo en la siguiente ruta: C:\\Program Files\\Microsoft SQL Server\\MSSQL15.MSSQLSERVER\\MSSQL\\Backup Posteriormente verificamos que la base de datos contenga las siguientes tablas: Hasta este punto hemos finalizado con la configuraci\u00f3n para la base de datos de nuestro proyecto por lo que seguiremos trabajando nuevamente en Visual Studio. Crearemos un endpoint que obtenga la lista de pokemons, para implementar esta funcionalidad revisaremos la estructura de nuestra soluci\u00f3n en Visual Studio. Nos situamos en el explorador de la soluci\u00f3n donde se denotan cuatro capas dominio ( 01.domain ), datos ( 02.data ), servicios ( 03.services ), webapi ( webapi ). Se deduce que cada uno tiene diferente funcion dentro del proyecto global que estamos desarrollando. Nota Notese que en cada capa hay un proyecto con la terminaci\u00f3n testing , estos son proyectos para realizar pruebas automatizadas y que son de gran importancia, pero para este tutorial no los usaremos ya que nos centraremos en poner en marcha nuestro primer proyecto. La primera capa que trabajaremos sera la que corresponde al dominio. Como siguiente paso agregaremos las clases que usaremos para lal\u00f3gica de nuestra aplicaci\u00f3n. La primera de ellas sera la clase que va a representar un producto de la aplicaci\u00f3n y dicha clase la nombraremos Pokemon . El codigo que colocaremos dentro de la clase Pokemon sera el siguiente: namespace apsys . pokedex { public class Pokemon : AbstractDomainObject { public virtual string Code { get ; set ; } public virtual string Name { get ; set ; } } } Por el momento solo agregaremos este bloque de codigo en la clase, continuamos en el siguiente paso. Lo siguiente sera trabajar en nuestra capa de datos. Primero crearemos la interfaz del repositorio que se relaciona con la tabla de pokemons en la base de datos, en el proyecto de repositorios agregamos una nueva interfaz llamada IPokemonRepository . Se debe de insertar el siguinete codigo en la interfaz IPokemonInterfaz using apsys . pokedex ; namespace apsys . pokedex . repositories { public interface IPokemonsRepository : IRepository < Pokemon > { } } Siendo que la interfaz mencionada solo define el contrato del repositorio ahora debemos crear una clase que implemente este repositorio, dicha clase la vamos a agregar en el proyecto de repositorios para NHibernate (el proceso a seguir para agregar una clase es el mismo que anteriormente presentamos en este tutorial con la clase Pokemon ), agregamos la clase PokemonRepository El codigo a insertar en la clase PokemonRepository es el siguiente: using apsys . pokedex ; using NHibernate ; namespace apsys . pokedex . repositories . nhibernate { public class PokemonsRepository : Repository < Pokemon > , IPokemonsRepository { public PokemonsRepository ( ISession session ) : base ( session ) { } } } A continuaci\u00f3n agregamos el repositorio de pokemons en la unidad de trabajo, para ello abrimos la interfaz IUnitOfWork que se encuentra en el proyecto de repositorios. En esta interfaz agregamos una linea de codigo para definir el repositorio de pokemons. Tambien debemos modificar la calse que implementa la interface de la unidad de trabajo, abrimos la clase UnitOfWork . En esta clase vamos a agregar dos lineas de codigo como se puede ver en la siguiente imagen. Posteriormente configuraremos el mapeo de nuestra API, para relacionar la clase Pokemon del dominio con la tabla [dbo].[Pokemon] de la base de datos, agregamos una nueva llamada PokemonMapper en la carpeta mappers del proyecto de repositorios de NHibernate . El codigo a insertar para la clase PokemonMapper sera: using NHibernate . Mapping . ByCode ; using NHibernate . Mapping . ByCode . Conformist ; namespace apsys . pokedex . repositories . nhibernate . mappers { public class PokemonMapper : ClassMapping < Pokemon > { public PokemonMapper () { Table ( \"Pokemons\" ); Id ( x => x . Id , x => { x . Generator ( Generators . Assigned ); x . Column ( \"Id\" ); }); Property ( b => b . Code , x => { x . Column ( \"Code\" ); }); Property ( b => b . Name , x => { x . Column ( \"Name\" ); }); } } } Hasta este punto hemos finalizado con la etapa que corresponde a los datos de nuestra API, por lo que pasaremos a la capa de servicios. Agregamos una clase llamada PokemonsSearcher , que se encargara de realizar la busqueda de pokemons en la base de datos, esta clase la agregaremos en el proyecto apsys.pokedex.services El codigo de nuestra clase PokemonsSearcher es el siguiente: using apsys . dynamic . filters ; using apsys . pokedex . repositories ; using MediatR ; namespace apsys . pokedex . services { public static class PokemonsSearcher { public static Query CreateCommand ( string queryString ) => new Query ( queryString ); // / < summary > // / Command class /// < /summary> public class Query : SearchQuery, IRequest<ISearchResult<Pokemon>> { public Query(string queryString) { QueryString = queryString; } } public class Handler : IRequestHandler<Query, ISearchResult<Pokemon>> { private readonly IUnitOfWork _unitOfWork; / // < summary > // / Constructor // / < /summary> / // < param name = \"uoW\" >< /param> / // < param name = \"pipeline\" >< /param> public Handler(IUnitOfWork uoW) { _unitOfWork = uoW; } public Task<ISearchResult<Pokemon>> Handle(Query request, CancellationToken cancellationToken) { QueryStringParser queryStringParser = new QueryStringParser(request.QueryString); int pageNumber = queryStringParser.ParsePageNumber(); int pageSize = queryStringParser.ParsePageSize(); Sorting sorting = queryStringParser.ParseSorting<Pokemon>(nameof(Pokemon.Name)); SortingCriteria sortingCriteria = new SortingCriteria(sorting.By, sorting.Direction == \"desc\" ? SortingCriteriaType.Descending : SortingCriteriaType.Ascending); var filters = queryStringParser.ParseFilterOperators<Pokemon>(); var expression = FilterExpressionParser.ParsePredicate<Pokemon>(filters); var allTimesheets = _unitOfWork.Pokemons.Get(expression, pageNumber, pageSize, sortingCriteria); var total = _unitOfWork.Pokemons.Count(expression); ISearchResult<Pokemon> result = new SearchResult<Pokemon>(total, pageNumber, pageSize, sorting, allTimesheets); result.Items = allTimesheets; result.Total = total; result.PageNumber = pageNumber; result.PageSize = pageSize; return Task.FromResult(result); } } } } Para el \u00faltimo tramo de este tutorial trabajaremos en la capa correspondiente a la webapi para codificar el endpoint que nos permitira obtener los datos de los pokemons. Iniciamos creando el controlador PokemonsController en la carpeta de controladores del proyecto apsys.pokedex.webapi El codigo para el controlador PokemonsController es el siguiente: using apsys . pokedex . services ; using MediatR ; using Microsoft . AspNetCore . Mvc ; namespace apsys . pokedex . webapi . Controllers { [ ApiController ] [ Route ( \"[controller]\" ) ] public class PokemonsController : WebApiControllerBase { public PokemonsController ( ILogger < WebApiControllerBase > logger , IMediator mediator , IWebHostEnvironment webHostEnvironment ) : base ( logger , mediator , webHostEnvironment ) { } [ HttpGet , Route ( \"\" ) ] public async Task < IActionResult > Search () { try { string queryString = HttpContext . Request . QueryString . Value ; var command = new PokemonsSearcher . Query ( queryString ); var result = await _mediator . Send ( command ); return Ok ( result ); } catch ( Exception ex ) { this . _logger . LogError ( ex , \"Error getting pokemons\" ); return BadRequest ( ex ); } } } } Por \u00faltimo modificaremos la cadena de conexi\u00f3n para nuestra base de datos con la webapi. Para probar que nuestro endpoint este funcionando correctamente ejecutaremos la aplicaci\u00f3n y podemos usar un cliente como el software Postman o alguna extensi\u00f3n de VSCode , como lo son Thunder cliente o RapidApiClient y hacer la solicitud de la API como se muestra en la siguiente imagen, considera que es probable que el puerto sea diferente al que se muestra en la imag\u00e9n.","title":"Crear un indice desde una plantilla"},{"location":"InternalProcedures/BackendTemplates/indexCreation/#1er-proyecto-con-una-plantilla","text":"Dentro de Apsys y como busqueda de la mejora continua, hemos creado algunas plantillas, esto con el fiel objetivo de estandarizar nuestros procesos para el desarrollo del software. Y como primer ejercicio tendras la tarea de generar un indice b\u00e1sico utilizando una plantilla y siguiendo las instrucciones que encontraras a continuaci\u00f3n.","title":"1er proyecto con una plantilla"},{"location":"InternalProcedures/BackendTemplates/indexCreation/#configuracion","text":"Deberas abrir el software Visual Studio, usea la plantilla de Apsys que instalamos previamente y con ella crearemos un nuevo proyecto llamado apsys.pokedex Hay que descargar el respaldo de la base de datos por medio del siguiente link: Pokedex DB Tambien iniciaremos el Microsoft SQL Management Studio y crearemos una nueva base de datos con el nombre pokedex.devel . Restauramos el respaldo a la base de datos que creamos. La selecci\u00f3n de la ruta depende de la carpeta en donde se guardo el respaldo de la base de datos que descargaste, en este ejemplo se guardo en la siguiente ruta: C:\\Program Files\\Microsoft SQL Server\\MSSQL15.MSSQLSERVER\\MSSQL\\Backup Posteriormente verificamos que la base de datos contenga las siguientes tablas: Hasta este punto hemos finalizado con la configuraci\u00f3n para la base de datos de nuestro proyecto por lo que seguiremos trabajando nuevamente en Visual Studio. Crearemos un endpoint que obtenga la lista de pokemons, para implementar esta funcionalidad revisaremos la estructura de nuestra soluci\u00f3n en Visual Studio. Nos situamos en el explorador de la soluci\u00f3n donde se denotan cuatro capas dominio ( 01.domain ), datos ( 02.data ), servicios ( 03.services ), webapi ( webapi ). Se deduce que cada uno tiene diferente funcion dentro del proyecto global que estamos desarrollando. Nota Notese que en cada capa hay un proyecto con la terminaci\u00f3n testing , estos son proyectos para realizar pruebas automatizadas y que son de gran importancia, pero para este tutorial no los usaremos ya que nos centraremos en poner en marcha nuestro primer proyecto. La primera capa que trabajaremos sera la que corresponde al dominio. Como siguiente paso agregaremos las clases que usaremos para lal\u00f3gica de nuestra aplicaci\u00f3n. La primera de ellas sera la clase que va a representar un producto de la aplicaci\u00f3n y dicha clase la nombraremos Pokemon . El codigo que colocaremos dentro de la clase Pokemon sera el siguiente: namespace apsys . pokedex { public class Pokemon : AbstractDomainObject { public virtual string Code { get ; set ; } public virtual string Name { get ; set ; } } } Por el momento solo agregaremos este bloque de codigo en la clase, continuamos en el siguiente paso. Lo siguiente sera trabajar en nuestra capa de datos. Primero crearemos la interfaz del repositorio que se relaciona con la tabla de pokemons en la base de datos, en el proyecto de repositorios agregamos una nueva interfaz llamada IPokemonRepository . Se debe de insertar el siguinete codigo en la interfaz IPokemonInterfaz using apsys . pokedex ; namespace apsys . pokedex . repositories { public interface IPokemonsRepository : IRepository < Pokemon > { } } Siendo que la interfaz mencionada solo define el contrato del repositorio ahora debemos crear una clase que implemente este repositorio, dicha clase la vamos a agregar en el proyecto de repositorios para NHibernate (el proceso a seguir para agregar una clase es el mismo que anteriormente presentamos en este tutorial con la clase Pokemon ), agregamos la clase PokemonRepository El codigo a insertar en la clase PokemonRepository es el siguiente: using apsys . pokedex ; using NHibernate ; namespace apsys . pokedex . repositories . nhibernate { public class PokemonsRepository : Repository < Pokemon > , IPokemonsRepository { public PokemonsRepository ( ISession session ) : base ( session ) { } } } A continuaci\u00f3n agregamos el repositorio de pokemons en la unidad de trabajo, para ello abrimos la interfaz IUnitOfWork que se encuentra en el proyecto de repositorios. En esta interfaz agregamos una linea de codigo para definir el repositorio de pokemons. Tambien debemos modificar la calse que implementa la interface de la unidad de trabajo, abrimos la clase UnitOfWork . En esta clase vamos a agregar dos lineas de codigo como se puede ver en la siguiente imagen. Posteriormente configuraremos el mapeo de nuestra API, para relacionar la clase Pokemon del dominio con la tabla [dbo].[Pokemon] de la base de datos, agregamos una nueva llamada PokemonMapper en la carpeta mappers del proyecto de repositorios de NHibernate . El codigo a insertar para la clase PokemonMapper sera: using NHibernate . Mapping . ByCode ; using NHibernate . Mapping . ByCode . Conformist ; namespace apsys . pokedex . repositories . nhibernate . mappers { public class PokemonMapper : ClassMapping < Pokemon > { public PokemonMapper () { Table ( \"Pokemons\" ); Id ( x => x . Id , x => { x . Generator ( Generators . Assigned ); x . Column ( \"Id\" ); }); Property ( b => b . Code , x => { x . Column ( \"Code\" ); }); Property ( b => b . Name , x => { x . Column ( \"Name\" ); }); } } } Hasta este punto hemos finalizado con la etapa que corresponde a los datos de nuestra API, por lo que pasaremos a la capa de servicios. Agregamos una clase llamada PokemonsSearcher , que se encargara de realizar la busqueda de pokemons en la base de datos, esta clase la agregaremos en el proyecto apsys.pokedex.services El codigo de nuestra clase PokemonsSearcher es el siguiente: using apsys . dynamic . filters ; using apsys . pokedex . repositories ; using MediatR ; namespace apsys . pokedex . services { public static class PokemonsSearcher { public static Query CreateCommand ( string queryString ) => new Query ( queryString ); // / < summary > // / Command class /// < /summary> public class Query : SearchQuery, IRequest<ISearchResult<Pokemon>> { public Query(string queryString) { QueryString = queryString; } } public class Handler : IRequestHandler<Query, ISearchResult<Pokemon>> { private readonly IUnitOfWork _unitOfWork; / // < summary > // / Constructor // / < /summary> / // < param name = \"uoW\" >< /param> / // < param name = \"pipeline\" >< /param> public Handler(IUnitOfWork uoW) { _unitOfWork = uoW; } public Task<ISearchResult<Pokemon>> Handle(Query request, CancellationToken cancellationToken) { QueryStringParser queryStringParser = new QueryStringParser(request.QueryString); int pageNumber = queryStringParser.ParsePageNumber(); int pageSize = queryStringParser.ParsePageSize(); Sorting sorting = queryStringParser.ParseSorting<Pokemon>(nameof(Pokemon.Name)); SortingCriteria sortingCriteria = new SortingCriteria(sorting.By, sorting.Direction == \"desc\" ? SortingCriteriaType.Descending : SortingCriteriaType.Ascending); var filters = queryStringParser.ParseFilterOperators<Pokemon>(); var expression = FilterExpressionParser.ParsePredicate<Pokemon>(filters); var allTimesheets = _unitOfWork.Pokemons.Get(expression, pageNumber, pageSize, sortingCriteria); var total = _unitOfWork.Pokemons.Count(expression); ISearchResult<Pokemon> result = new SearchResult<Pokemon>(total, pageNumber, pageSize, sorting, allTimesheets); result.Items = allTimesheets; result.Total = total; result.PageNumber = pageNumber; result.PageSize = pageSize; return Task.FromResult(result); } } } } Para el \u00faltimo tramo de este tutorial trabajaremos en la capa correspondiente a la webapi para codificar el endpoint que nos permitira obtener los datos de los pokemons. Iniciamos creando el controlador PokemonsController en la carpeta de controladores del proyecto apsys.pokedex.webapi El codigo para el controlador PokemonsController es el siguiente: using apsys . pokedex . services ; using MediatR ; using Microsoft . AspNetCore . Mvc ; namespace apsys . pokedex . webapi . Controllers { [ ApiController ] [ Route ( \"[controller]\" ) ] public class PokemonsController : WebApiControllerBase { public PokemonsController ( ILogger < WebApiControllerBase > logger , IMediator mediator , IWebHostEnvironment webHostEnvironment ) : base ( logger , mediator , webHostEnvironment ) { } [ HttpGet , Route ( \"\" ) ] public async Task < IActionResult > Search () { try { string queryString = HttpContext . Request . QueryString . Value ; var command = new PokemonsSearcher . Query ( queryString ); var result = await _mediator . Send ( command ); return Ok ( result ); } catch ( Exception ex ) { this . _logger . LogError ( ex , \"Error getting pokemons\" ); return BadRequest ( ex ); } } } } Por \u00faltimo modificaremos la cadena de conexi\u00f3n para nuestra base de datos con la webapi. Para probar que nuestro endpoint este funcionando correctamente ejecutaremos la aplicaci\u00f3n y podemos usar un cliente como el software Postman o alguna extensi\u00f3n de VSCode , como lo son Thunder cliente o RapidApiClient y hacer la solicitud de la API como se muestra en la siguiente imagen, considera que es probable que el puerto sea diferente al que se muestra en la imag\u00e9n.","title":"Configuraci\u00f3n"},{"location":"InternalProcedures/FrontendTemplates/","text":"Crear nuevo proyecto a partir de una plantilla Igresa a tu cuenta github Seleciona tu perfil e ingresa a las organizaciones Seleciona la organizaci\u00f3n donde vas a crear el repositorio Seleciona nuevo repositorio Te debe apararcer la siguiente vista: Asegurate de tener acceso a la organici\u00f3n de Apsys y selecciona la opci\u00f3n apsys-mx/apsys.frontend.base.turkey . Esta es la plantilla base que Apsys gener\u00f3 con la configuraci\u00f3n de tecnolog\u00edas necesarias para inicializar un proyecto. S\u00ed no cuentas con el acceso al repositorio, deberas solicitarlo al administrador. Agrega el nombre del proyecto, selecciona la opci\u00f3n de Repositorio Privado y finaliza el proceso seleccionando el bot\u00f3n Crear repositorio Una vez finalizado este proceso, Github te redirigir\u00e1 al proyecto creado. Clonar repositorio en un dispositivo local Al abrir el proyecto, selecciona el bot\u00f3n Clonar y copia la ruta del proyecto. En el explorador de archivos de tu dispositivo, ingresa a la ubicaci\u00f3n donde deseas clonar el repositorio. Para clonar el repositorio existen varias formas de hacerlo: Forma manual desde la terminal. Ubica la ruta de tu carperta donde quieres clonar el repositorio e ingresa el siguiente comando: git clone Por ultimo, pega la ruta de git, del repositorio que quieres clonar. Usando un programa de control de versiones. En Apsys usualmente usamos Tortoise Git. Cunado termine de clonarce e repositorio debe aparcer una carpeta donde se guardo. Cambiamos o creamos el branch a devel","title":"Instalaci\u00f3n y uso de Plantillas"},{"location":"InternalProcedures/FrontendTemplates/#crear-nuevo-proyecto-a-partir-de-una-plantilla","text":"Igresa a tu cuenta github Seleciona tu perfil e ingresa a las organizaciones Seleciona la organizaci\u00f3n donde vas a crear el repositorio Seleciona nuevo repositorio Te debe apararcer la siguiente vista: Asegurate de tener acceso a la organici\u00f3n de Apsys y selecciona la opci\u00f3n apsys-mx/apsys.frontend.base.turkey . Esta es la plantilla base que Apsys gener\u00f3 con la configuraci\u00f3n de tecnolog\u00edas necesarias para inicializar un proyecto. S\u00ed no cuentas con el acceso al repositorio, deberas solicitarlo al administrador. Agrega el nombre del proyecto, selecciona la opci\u00f3n de Repositorio Privado y finaliza el proceso seleccionando el bot\u00f3n Crear repositorio Una vez finalizado este proceso, Github te redirigir\u00e1 al proyecto creado.","title":"Crear nuevo proyecto a partir de una plantilla"},{"location":"InternalProcedures/FrontendTemplates/#clonar-repositorio-en-un-dispositivo-local","text":"Al abrir el proyecto, selecciona el bot\u00f3n Clonar y copia la ruta del proyecto. En el explorador de archivos de tu dispositivo, ingresa a la ubicaci\u00f3n donde deseas clonar el repositorio. Para clonar el repositorio existen varias formas de hacerlo: Forma manual desde la terminal. Ubica la ruta de tu carperta donde quieres clonar el repositorio e ingresa el siguiente comando: git clone Por ultimo, pega la ruta de git, del repositorio que quieres clonar. Usando un programa de control de versiones. En Apsys usualmente usamos Tortoise Git. Cunado termine de clonarce e repositorio debe aparcer una carpeta donde se guardo. Cambiamos o creamos el branch a devel","title":"Clonar repositorio en un dispositivo local"},{"location":"InternalProcedures/FrontendTemplates/indexCreation/","text":"Creaci\u00f3n de un Indice Si creaste tu plantilla, a partir del repositorio apsys-mx/apsys.frontend.base.turkey , aseg\u00farate de tener estas carpetas para poder generar el index. common dataGrid filters Abre la consola de visual: Instala los siguientes paquetes que contendr\u00e1n lo requerido para el funcionamiento del \u00cdndice. Install moment 1 npm install moment Install uuidv4 1 npm install uuidv4 Install react-select 1 npm install react - select Install react-date-range 1 npm install react - date - range Archivo endpoint Conecta el backend con el frontend, este proceso es diferente de acuerdo al proyecto. Para comprobar si el back est\u00e1 conectado con el front entra a la carpeta store y ah\u00ed debe de haber una archivo donde se configura la URL donde nos vamos a conectar al back. Comprobamos si la URL corresponde con la del back: Configuraci\u00f3n del api Slice Para obtener la informaci\u00f3n del index se debe generar un endpoint para realizar la petici\u00f3n de back. Si no existe el archivo donde se configuran los endpoints, crea uno para comenzar a crear los m\u00e9todos donde vamos a obtener la informaci\u00f3n del back y los cat\u00e1logos para los filtros. Creada a partir del modulo a trabajar, para este ejemplo seria: >home.endPoints.js Estructura del endpoint para obtener la informaci\u00f3n aplicando paginado, filtros y ordenamiento. Especificamos por la columna se va a ordenar la informaci\u00f3n. En el ejemplo indicamos => CreationDate 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import { timesheetsApi } from '../../store/timesheet-api' export const timesheetsEndPoint = timesheetsApi . injectEndpoints ({ endpoints : ( builder ) => ({ getTimesheets : builder . query ({ query ( params ) { const { sorting , pagination , filters } = params var { sortBy , sortDirection } = sorting var { pageNumber , pageSize } = pagination pageNumber = pageNumber ? pageNumber : 0 pageSize = pageSize ? pageSize : 0 sortDirection = sortDirection && sortDirection . length > 0 ? sortDirection : 'desc' sortBy = sortBy && sortBy . length > 0 ? sortBy : 'projectName' var url = `Timesheets?sortBy=${sortBy}&sortDirection=${sortDirection}&pageNumber=${pageNumber}&pageSize=${pageSize}&${filters}` return { url : url , method : 'GET' , } }, }), }), overrideExisting : true , }) export const { useGetTimesheetsQuery , useGetCatalogsQuery } = timesheetsEndPoint Adicional se agrega un endpoint para obtener la lista de cat\u00e1logo para aplicar en los filtros con el nombre getCatalogs : 1 2 3 4 5 6 7 8 getCatalogs : builder . query ({ query ( fieldName ) { return { url : `Timesheets/catalogs/${fieldName}` , method : 'GET' , } }, }), Archivo Slice -El achivo Slice es aquel donde se encuentra la configuraci\u00f3n del initialState: La cual contiene paginaci\u00f3n, ordenamiento y filtros. El listado de reducers: Para la actualizaci\u00f3n de initialState. Si no existe el archivo slice, crea uno para configurar el initialState. -En caso de que exista agregar los metodos faltantes. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 import { createSlice } from '@reduxjs/toolkit' const defaultToasterState = { open : false , message : '' , severity : 'info' , } const initialState = { pagination : { rowsCount : 0 , rowsPerPage : 20 , page : 0 , }, sorting : { sortBy : '' , sortDirection : '' , }, filters : '' , } export const homeSlice = createSlice ({ name : 'homeSlice' , initialState , reducers : { setPageNumber : ( state , action ) => { state . pagination . page = action . payload }, setPageSize : ( state , action ) => { state . pagination . rowsPerPage = action . payload }, setSorting : ( state , action ) => { state . sorting . sortBy = action . payload . sortBy state . sorting . sortDirection = action . payload . sortDirection }, setFilter : ( state , action ) => { state . filters = action . payload }, }, }) export const { setTitle , setToasterState , setPageNumber , setPageSize , setSorting , setFilter , } = homeSlice . actions export default homeSlice . reducer Archivo Selectors Archivos que contenga los Selectors: Donde obtendremos la informaci\u00f3n initialState Si no existe el archivo selectors, crea uno y agrega los metodos faltantes 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import { createSelector } from 'reselect' const getState = ( state ) => ( state = state . homeSlice ) const getViewState = createSelector ( getState , ( state ) => { return state }) const getPagination = createSelector ( getViewState , ( state ) => { return state . pagination }) const getSorting = createSelector ( getViewState , ( state ) => { return state . sorting }) const getFilters = createSelector ( getViewState , ( state ) => { return state . filters }) export { getPagination , getSorting , getFilters , getViewState } Creaci\u00f3n de la tabla index Para generar la tabla, es necesario revisar si contamos con los siguientes archivos y que contenga la siguiente informaci\u00f3n: Crear configuraci\u00f3n de tabla Crear el archivo 'configurationTable.jsx' Este archivo contiene la confirmaci\u00f3n de la tabla, aqu\u00ed indicamos las columnas que queremos que aparecen en la tabla: | 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 export const localTableConfig = [ { title : 'Codigo del proyecto' , // => Nombre de la columna sortable : true , // => Si aplicar\u00e1 ordenmiento en la columna dataSource : 'projectCode' , // => Nombre que regrea el back isActiveFilter : true , // => Si aplicar\u00e1 filtro en la columna filterType : 'text' , // =>> El tipo de filtro }, { title : 'Fecha de inicio' , sortable : true , dataSource : 'startDate' , isActiveFilter : true , filterType : 'date' , }, { title : 'Duraci\u00f3n' , sortable : true , dataSource : 'duration' , isActiveFilter : true , filterType : 'numeric' , }, ] Implementar DataGrid Genera un nuevo archivo o buscamos el archivo donde queremos implementar la tabla: En este documento importar\u00e1s la configuraci\u00f3n anterior de la tabla, as\u00ed como el archivo de datagrid y el paginado ya configurado en el proyecto base. Es necesario llamar los selectors para obtener el paginado, ordenamiento y filtros: 1 import * as selectors from '../home.selectors' 1 2 3 const viewPaginationState = useSelector (( state ) => selectors . getPagination ( state )) const viewSortingState = useSelector (( state ) => selectors . getSorting ( state )) const viewFilter = useSelector (( state ) => selectors . getFilters ( state )) Llamar el endpoint que realizamos para obtener la informaci\u00f3n del back mandando la informaci\u00f3n que obtenemos de los selectores del initialState. Este endpoint nos regresar\u00e1 un isLoading, isError y una data que contendr\u00e1 la lista de Items, total, pageSize y pageNumber. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 const { data : timeSheetsResponse , isLoading , isError , error , } = useGetTimesheetsQuery ({ pagination : { pageNumber : viewPaginationState . page , pageSize : viewPaginationState . rowsPerPage , }, sorting : { sortBy : viewSortingState . sortBy , sortDirection : viewSortingState . sortDirection , }, filters : viewFilter ? viewFilter : '' , }) Podemos confirmar que recibimos informaci\u00f3n de back mandando a consola \u00e9l data y podemos ver qu\u00e9 informaci\u00f3n revivimos: La lista de item podemos ver la informaci\u00f3n que recibimos y aqu\u00ed podemos determinar que informaci\u00f3n queremos que aparezca y podemos agregar los campos en la configuraci\u00f3n de la tabla: Generaremos m\u00e9todos para llamar las acciones que permitan modificar el paginado y ordenamiento: 1 2 3 4 5 6 7 8 9 10 11 12 const handleChangePage = ( pageNumber ) => { dispatch ( setPageNumber ( pageNumber )) } const handleChangeRowsPerPage = ( pageSize ) => { dispatch ( setPageSize ( pageSize )) } // :::::::::::::::::::::::::::::::::::::::::::::::::::: // // :::::::::::::::: :( Sorting ) :::::::::::::::::::::::::: // const onchangeSorting = ( sort , direction ) => { dispatch ( setSorting ({ sortBy : sort , sortDirection : direction })) } // :::::::::::::::::::::::::::::::::::::::::::::::::::: // Si quieres realizar alguna modificaci\u00f3n de las columnas puedes realizar la siguiente configuraci\u00f3n: Se pasa la configuraci\u00f3n de la tabla, tableConfig. Se indica la tabla que quieres modificar y el cambio que quieras realizar 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 const [ localTableConfig , setLocalTableConfig ] = useState ( [] ) useEffect (() => { if ( tableConfig ) { var local = tableConfig . map (( config ) => { return { ... config } }) setLocalTableConfig ( local ) } }, [ tableConfig ] ) /** * Get the header configuration */ const enhancedConfiguration = localTableConfig . map (( config ) => { switch ( config . dataSource ) { // indicamos la columna que queremos modificar case 'startDate' : config . onRenderProperty = ( item ) => { return moment ( item . startDate ) . format ( 'DD/MM/YYYY' ) // El cambio que queremos realizar } break case 'endDate' : config . onRenderProperty = ( item ) => { return moment ( item . endDate ) . format ( 'DD/MM/YYYY' ) } break default : } return config }) ``` Ahora llamamos la tabla y le pasamos los valores correspondientes: -Pasamos la configuraci\u00f3n de la tabla -la lista de item que recibimos del data -Agregamos el m\u00e9todo de ordenamiento y paginados 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 < Box > < DataGrid headers = { enhancedConfiguration } data = { data . items } onchangeSorting = { onchangeSorting } sortBy = { sortBy } sortDirection = { sortDirection } /> <Pagination pagination={data} onPageChange={handleChangePage} onRowsPerPageChange={handleChangeRowsPerPage} / > < /Box>","title":"Crear un indice desde una plantilla"},{"location":"InternalProcedures/FrontendTemplates/indexCreation/#creacion-de-un-indice","text":"Si creaste tu plantilla, a partir del repositorio apsys-mx/apsys.frontend.base.turkey , aseg\u00farate de tener estas carpetas para poder generar el index. common dataGrid filters Abre la consola de visual: Instala los siguientes paquetes que contendr\u00e1n lo requerido para el funcionamiento del \u00cdndice. Install moment 1 npm install moment Install uuidv4 1 npm install uuidv4 Install react-select 1 npm install react - select Install react-date-range 1 npm install react - date - range","title":"Creaci\u00f3n de un Indice"},{"location":"InternalProcedures/FrontendTemplates/indexCreation/#archivo-endpoint","text":"Conecta el backend con el frontend, este proceso es diferente de acuerdo al proyecto. Para comprobar si el back est\u00e1 conectado con el front entra a la carpeta store y ah\u00ed debe de haber una archivo donde se configura la URL donde nos vamos a conectar al back. Comprobamos si la URL corresponde con la del back:","title":"Archivo endpoint"},{"location":"InternalProcedures/FrontendTemplates/indexCreation/#configuracion-del-api-slice","text":"Para obtener la informaci\u00f3n del index se debe generar un endpoint para realizar la petici\u00f3n de back. Si no existe el archivo donde se configuran los endpoints, crea uno para comenzar a crear los m\u00e9todos donde vamos a obtener la informaci\u00f3n del back y los cat\u00e1logos para los filtros. Creada a partir del modulo a trabajar, para este ejemplo seria: >home.endPoints.js Estructura del endpoint para obtener la informaci\u00f3n aplicando paginado, filtros y ordenamiento. Especificamos por la columna se va a ordenar la informaci\u00f3n. En el ejemplo indicamos => CreationDate 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import { timesheetsApi } from '../../store/timesheet-api' export const timesheetsEndPoint = timesheetsApi . injectEndpoints ({ endpoints : ( builder ) => ({ getTimesheets : builder . query ({ query ( params ) { const { sorting , pagination , filters } = params var { sortBy , sortDirection } = sorting var { pageNumber , pageSize } = pagination pageNumber = pageNumber ? pageNumber : 0 pageSize = pageSize ? pageSize : 0 sortDirection = sortDirection && sortDirection . length > 0 ? sortDirection : 'desc' sortBy = sortBy && sortBy . length > 0 ? sortBy : 'projectName' var url = `Timesheets?sortBy=${sortBy}&sortDirection=${sortDirection}&pageNumber=${pageNumber}&pageSize=${pageSize}&${filters}` return { url : url , method : 'GET' , } }, }), }), overrideExisting : true , }) export const { useGetTimesheetsQuery , useGetCatalogsQuery } = timesheetsEndPoint Adicional se agrega un endpoint para obtener la lista de cat\u00e1logo para aplicar en los filtros con el nombre getCatalogs : 1 2 3 4 5 6 7 8 getCatalogs : builder . query ({ query ( fieldName ) { return { url : `Timesheets/catalogs/${fieldName}` , method : 'GET' , } }, }),","title":"Configuraci\u00f3n del api Slice"},{"location":"InternalProcedures/FrontendTemplates/indexCreation/#archivo-slice","text":"-El achivo Slice es aquel donde se encuentra la configuraci\u00f3n del initialState: La cual contiene paginaci\u00f3n, ordenamiento y filtros. El listado de reducers: Para la actualizaci\u00f3n de initialState. Si no existe el archivo slice, crea uno para configurar el initialState. -En caso de que exista agregar los metodos faltantes. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 import { createSlice } from '@reduxjs/toolkit' const defaultToasterState = { open : false , message : '' , severity : 'info' , } const initialState = { pagination : { rowsCount : 0 , rowsPerPage : 20 , page : 0 , }, sorting : { sortBy : '' , sortDirection : '' , }, filters : '' , } export const homeSlice = createSlice ({ name : 'homeSlice' , initialState , reducers : { setPageNumber : ( state , action ) => { state . pagination . page = action . payload }, setPageSize : ( state , action ) => { state . pagination . rowsPerPage = action . payload }, setSorting : ( state , action ) => { state . sorting . sortBy = action . payload . sortBy state . sorting . sortDirection = action . payload . sortDirection }, setFilter : ( state , action ) => { state . filters = action . payload }, }, }) export const { setTitle , setToasterState , setPageNumber , setPageSize , setSorting , setFilter , } = homeSlice . actions export default homeSlice . reducer","title":"Archivo Slice"},{"location":"InternalProcedures/FrontendTemplates/indexCreation/#archivo-selectors","text":"Archivos que contenga los Selectors: Donde obtendremos la informaci\u00f3n initialState Si no existe el archivo selectors, crea uno y agrega los metodos faltantes 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import { createSelector } from 'reselect' const getState = ( state ) => ( state = state . homeSlice ) const getViewState = createSelector ( getState , ( state ) => { return state }) const getPagination = createSelector ( getViewState , ( state ) => { return state . pagination }) const getSorting = createSelector ( getViewState , ( state ) => { return state . sorting }) const getFilters = createSelector ( getViewState , ( state ) => { return state . filters }) export { getPagination , getSorting , getFilters , getViewState }","title":"Archivo Selectors"},{"location":"InternalProcedures/FrontendTemplates/indexCreation/#creacion-de-la-tabla-index","text":"Para generar la tabla, es necesario revisar si contamos con los siguientes archivos y que contenga la siguiente informaci\u00f3n:","title":"Creaci\u00f3n de la tabla index"},{"location":"InternalProcedures/FrontendTemplates/indexCreation/#crear-configuracion-de-tabla","text":"Crear el archivo 'configurationTable.jsx' Este archivo contiene la confirmaci\u00f3n de la tabla, aqu\u00ed indicamos las columnas que queremos que aparecen en la tabla: | 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 export const localTableConfig = [ { title : 'Codigo del proyecto' , // => Nombre de la columna sortable : true , // => Si aplicar\u00e1 ordenmiento en la columna dataSource : 'projectCode' , // => Nombre que regrea el back isActiveFilter : true , // => Si aplicar\u00e1 filtro en la columna filterType : 'text' , // =>> El tipo de filtro }, { title : 'Fecha de inicio' , sortable : true , dataSource : 'startDate' , isActiveFilter : true , filterType : 'date' , }, { title : 'Duraci\u00f3n' , sortable : true , dataSource : 'duration' , isActiveFilter : true , filterType : 'numeric' , }, ]","title":"Crear configuraci\u00f3n de tabla"},{"location":"InternalProcedures/FrontendTemplates/indexCreation/#implementar-datagrid","text":"Genera un nuevo archivo o buscamos el archivo donde queremos implementar la tabla: En este documento importar\u00e1s la configuraci\u00f3n anterior de la tabla, as\u00ed como el archivo de datagrid y el paginado ya configurado en el proyecto base. Es necesario llamar los selectors para obtener el paginado, ordenamiento y filtros: 1 import * as selectors from '../home.selectors' 1 2 3 const viewPaginationState = useSelector (( state ) => selectors . getPagination ( state )) const viewSortingState = useSelector (( state ) => selectors . getSorting ( state )) const viewFilter = useSelector (( state ) => selectors . getFilters ( state )) Llamar el endpoint que realizamos para obtener la informaci\u00f3n del back mandando la informaci\u00f3n que obtenemos de los selectores del initialState. Este endpoint nos regresar\u00e1 un isLoading, isError y una data que contendr\u00e1 la lista de Items, total, pageSize y pageNumber. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 const { data : timeSheetsResponse , isLoading , isError , error , } = useGetTimesheetsQuery ({ pagination : { pageNumber : viewPaginationState . page , pageSize : viewPaginationState . rowsPerPage , }, sorting : { sortBy : viewSortingState . sortBy , sortDirection : viewSortingState . sortDirection , }, filters : viewFilter ? viewFilter : '' , }) Podemos confirmar que recibimos informaci\u00f3n de back mandando a consola \u00e9l data y podemos ver qu\u00e9 informaci\u00f3n revivimos: La lista de item podemos ver la informaci\u00f3n que recibimos y aqu\u00ed podemos determinar que informaci\u00f3n queremos que aparezca y podemos agregar los campos en la configuraci\u00f3n de la tabla: Generaremos m\u00e9todos para llamar las acciones que permitan modificar el paginado y ordenamiento: 1 2 3 4 5 6 7 8 9 10 11 12 const handleChangePage = ( pageNumber ) => { dispatch ( setPageNumber ( pageNumber )) } const handleChangeRowsPerPage = ( pageSize ) => { dispatch ( setPageSize ( pageSize )) } // :::::::::::::::::::::::::::::::::::::::::::::::::::: // // :::::::::::::::: :( Sorting ) :::::::::::::::::::::::::: // const onchangeSorting = ( sort , direction ) => { dispatch ( setSorting ({ sortBy : sort , sortDirection : direction })) } // :::::::::::::::::::::::::::::::::::::::::::::::::::: // Si quieres realizar alguna modificaci\u00f3n de las columnas puedes realizar la siguiente configuraci\u00f3n: Se pasa la configuraci\u00f3n de la tabla, tableConfig. Se indica la tabla que quieres modificar y el cambio que quieras realizar 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 const [ localTableConfig , setLocalTableConfig ] = useState ( [] ) useEffect (() => { if ( tableConfig ) { var local = tableConfig . map (( config ) => { return { ... config } }) setLocalTableConfig ( local ) } }, [ tableConfig ] ) /** * Get the header configuration */ const enhancedConfiguration = localTableConfig . map (( config ) => { switch ( config . dataSource ) { // indicamos la columna que queremos modificar case 'startDate' : config . onRenderProperty = ( item ) => { return moment ( item . startDate ) . format ( 'DD/MM/YYYY' ) // El cambio que queremos realizar } break case 'endDate' : config . onRenderProperty = ( item ) => { return moment ( item . endDate ) . format ( 'DD/MM/YYYY' ) } break default : } return config }) ``` Ahora llamamos la tabla y le pasamos los valores correspondientes: -Pasamos la configuraci\u00f3n de la tabla -la lista de item que recibimos del data -Agregamos el m\u00e9todo de ordenamiento y paginados 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 < Box > < DataGrid headers = { enhancedConfiguration } data = { data . items } onchangeSorting = { onchangeSorting } sortBy = { sortBy } sortDirection = { sortDirection } /> <Pagination pagination={data} onPageChange={handleChangePage} onRowsPerPageChange={handleChangeRowsPerPage} / > < /Box>","title":"Implementar DataGrid"},{"location":"ProjectDocs/","text":"","title":"Inicio"}]}